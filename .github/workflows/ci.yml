name: CI

# Trigger the workflow on push request, but only for the main branch
# or from github actions itself (workflow_dispatch)
# There is no master branch for this project!!
# NOTE: The workflow is off of the main branch!
# added wildcard when feature branch was incorporated
# but do not want a build when readme or json or html is updated
on:
  workflow_dispatch:
  push:
    branches: 
     - '*'
    paths:
     - 'app/**'
     - 'src/**'
     - 'test/**'
     - '.github/workflows/**'

jobs:
  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: macOS-latest #macos-latest
    env:
      working-directory: ./
    strategy:
      matrix:
        stack: ["latest"]
        ghc: ["latest"]
        cabal: ["latest"]
  
  resolver: lts-20.26

    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md

    # Note: the last condition in the "if" below works off of the "main" branch
    steps:
    - uses: actions/checkout@v3
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'
      with:
        fetch-depth: '0'
    
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.34.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        INITIAL_VERSION: 0.2.0
      continue-on-error: true

    - uses: actions/setup-haskell@v1 #.1.4
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}
        cabal-version: ${{ matrix.cabal }}
        
    - uses: actions/cache@v2
      name: Cache multiple paths
      env: 
        cache-name: cache-stack
      with:
        path: | 
          ~/.stack
          ~/src
          ~/app
          ~/test
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}- 
  
    - name: Echo World
      run: | 
        ls -al
        echo $GITHUB_REPOSITORY $GITHUB_WORKSPACE $GITHUB_EVENT_PATH $RUNNER_WORKSPACE
        echo
        env
    
    # the last command in the makefile copies function.zip back to the working directory
    # because fileb:// seems unable to "see" a sub-directory
    # the continue-on-error is a relic from an earlier time when the build off of the desktop
    # repo-ed in Github was enough to move it to AWS. Perhaps this can/ought to be removed
    - name: Build Binary
      run: cabal build -I $GITHUB_WORKSPACE --print-directory
    #  continue-on-error: true
      

