1:1-1:1::RefinementHelper.$trModule :: "GHC.Types.Module"
15:1-15:4::RefinementHelper.die :: "forall a . {VV##0 : [GHC.Types.Char] | false} -> a"
25:1-25:14::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | 2 <= VV##0})"
29:1-29:9::RefinementHelper.intsGte2 :: "x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 == x1\n                                                                                  && 2 <= VV##0})"
29:10-29:11::n :: "GHC.Types.Int"
29:17-29:18::n :: "{v : GHC.Types.Int | v == n##a1sm}"
29:21-29:22::lq_anf$##7205759403792815225 :: "GHC.Types.Int"
29:28-29:42::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
29:33-29:42::lq_anf$##7205759403792815229 :: "[GHC.Types.Char]"
29:48-29:55::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
29:54-29:55::n :: "{v : GHC.Types.Int | v == n##a1sm}"
33:1-33:20::RefinementHelper.filterInvalidNonPos :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                               && 0 < VV##0})"
37:1-37:8::RefinementHelper.intsPos :: "x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 == x1\n                                                                                  && VV##0 >= 0\n                                                                                  && 0 < VV##0})"
37:9-37:10::n :: "GHC.Types.Int"
37:16-37:17::n :: "{v : GHC.Types.Int | v == n##a1sn}"
37:20-37:21::lq_anf$##7205759403792815219 :: "GHC.Types.Int"
37:27-37:41::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
37:32-37:41::lq_anf$##7205759403792815223 :: "[GHC.Types.Char]"
37:47-37:54::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
37:53-37:54::n :: "{v : GHC.Types.Int | v == n##a1sn}"