1:1-1:1::RefinementHelper.$trModule :: "GHC.Types.Module"
29:1-29:4::RefinementHelper.die :: "forall a . {VV##0 : [GHC.Types.Char] | false} -> a"
41:1-41:14::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | 2 <= VV##0})"
47:1-47:9::RefinementHelper.intsGte2 :: "x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 == x1\n                                                                                  && 2 <= VV##0})"
47:10-47:11::n :: "GHC.Types.Int"
47:17-47:18::n :: "{v : GHC.Types.Int | v == n##a1sm}"
47:21-47:22::lq_anf$##7205759403792815225 :: "GHC.Types.Int"
47:28-47:42::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
47:33-47:42::lq_anf$##7205759403792815229 :: "[GHC.Types.Char]"
47:48-47:55::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
47:54-47:55::n :: "{v : GHC.Types.Int | v == n##a1sm}"
53:1-53:20::RefinementHelper.filterInvalidNonPos :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                               && 0 < VV##0})"
59:1-59:8::RefinementHelper.intsPos :: "x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV##0 : GHC.Types.Int | VV##0 == x1\n                                                                                  && VV##0 >= 0\n                                                                                  && 0 < VV##0})"
59:9-59:10::n :: "GHC.Types.Int"
59:16-59:17::n :: "{v : GHC.Types.Int | v == n##a1sn}"
59:20-59:21::lq_anf$##7205759403792815219 :: "GHC.Types.Int"
59:27-59:41::Data.Either.Left :: "{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}"
59:32-59:41::lq_anf$##7205759403792815223 :: "[GHC.Types.Char]"
59:47-59:54::Data.Either.Right :: "{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}"
59:53-59:54::n :: "{v : GHC.Types.Int | v == n##a1sn}"