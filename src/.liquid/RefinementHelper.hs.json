{"errors":[],"sptypes":[{"ann":"GHC.Types.Module","ident":"RefinementHelper.$trModule","start":{"column":1,"line":1},"stop":{"column":1,"line":1}},{"ann":"{VV : GHC.Types.Int | VV == 0}","ident":"RefinementHelper.zero","start":{"column":1,"line":9},"stop":{"column":5,"line":9}},{"ann":"{VV : GHC.Types.Int | VV /= 0}","ident":"RefinementHelper.one","start":{"column":1,"line":12},"stop":{"column":4,"line":12}},{"ann":"{VV : GHC.Types.Int | VV /= 0}","ident":"RefinementHelper.two","start":{"column":1,"line":13},"stop":{"column":4,"line":13}},{"ann":"{VV : GHC.Types.Int | VV /= 0}","ident":"RefinementHelper.three","start":{"column":1,"line":14},"stop":{"column":6,"line":14}},{"ann":"forall a . {VV : [GHC.Types.Char] | false} -> a","ident":"RefinementHelper.die","start":{"column":1,"line":19},"stop":{"column":4,"line":19}},{"ann":"GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | 2 <= VV})","ident":"RefinementHelper.filterInvalid","start":{"column":1,"line":30},"stop":{"column":14,"line":30}},{"ann":"x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV == x1\n                                                                               && 2 <= VV})","ident":"RefinementHelper.intsGte2","start":{"column":1,"line":34},"stop":{"column":9,"line":34}},{"ann":"GHC.Types.Int","ident":"n","start":{"column":10,"line":34},"stop":{"column":11,"line":34}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":17,"line":34},"stop":{"column":18,"line":34}},{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792800763","start":{"column":21,"line":34},"stop":{"column":22,"line":34}},{"ann":"{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}","ident":"Data.Either.Left","start":{"column":28,"line":34},"stop":{"column":42,"line":34}},{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792800767","start":{"column":33,"line":34},"stop":{"column":42,"line":34}},{"ann":"{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}","ident":"Data.Either.Right","start":{"column":48,"line":34},"stop":{"column":55,"line":34}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":54,"line":34},"stop":{"column":55,"line":34}},{"ann":"GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV >= 0\n                                                                            && 0 < VV})","ident":"RefinementHelper.filterInvalidNonPos","start":{"column":1,"line":38},"stop":{"column":20,"line":38}},{"ann":"x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV == x1\n                                                                               && VV >= 0\n                                                                               && 0 < VV})","ident":"RefinementHelper.intsPos","start":{"column":1,"line":42},"stop":{"column":8,"line":42}},{"ann":"GHC.Types.Int","ident":"n","start":{"column":9,"line":42},"stop":{"column":10,"line":42}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":16,"line":42},"stop":{"column":17,"line":42}},{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792800757","start":{"column":20,"line":42},"stop":{"column":21,"line":42}},{"ann":"{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}","ident":"Data.Either.Left","start":{"column":27,"line":42},"stop":{"column":41,"line":42}},{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792800761","start":{"column":32,"line":42},"stop":{"column":41,"line":42}},{"ann":"{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}","ident":"Data.Either.Right","start":{"column":47,"line":42},"stop":{"column":54,"line":42}},{"ann":"{v : GHC.Types.Int | v == n}","ident":"n","start":{"column":53,"line":42},"stop":{"column":54,"line":42}}],"status":"safe","types":{"1":{"1":{"ann":"GHC.Types.Module","col":1,"ident":"RefinementHelper.$trModule","row":1}},"12":{"1":{"ann":"{VV : GHC.Types.Int | VV /= 0}","col":1,"ident":"RefinementHelper.one","row":12}},"13":{"1":{"ann":"{VV : GHC.Types.Int | VV /= 0}","col":1,"ident":"RefinementHelper.two","row":13}},"14":{"1":{"ann":"{VV : GHC.Types.Int | VV /= 0}","col":1,"ident":"RefinementHelper.three","row":14}},"19":{"1":{"ann":"forall a . {VV : [GHC.Types.Char] | false} -> a","col":1,"ident":"RefinementHelper.die","row":19}},"30":{"1":{"ann":"GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | 2 <= VV})","col":1,"ident":"RefinementHelper.filterInvalid","row":30}},"34":{"1":{"ann":"x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV == x1\n                                                                               && 2 <= VV})","col":1,"ident":"RefinementHelper.intsGte2","row":34},"10":{"ann":"GHC.Types.Int","col":10,"ident":"n","row":34},"17":{"ann":"{v : GHC.Types.Int | v == n}","col":17,"ident":"n","row":34},"21":{"ann":"GHC.Types.Int","col":21,"ident":"lq_anf$##7205759403792800763","row":34},"28":{"ann":"{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}","col":28,"ident":"Data.Either.Left","row":34},"33":{"ann":"[GHC.Types.Char]","col":33,"ident":"lq_anf$##7205759403792800767","row":34},"48":{"ann":"{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}","col":48,"ident":"Data.Either.Right","row":34},"54":{"ann":"{v : GHC.Types.Int | v == n}","col":54,"ident":"n","row":34}},"38":{"1":{"ann":"GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV >= 0\n                                                                            && 0 < VV})","col":1,"ident":"RefinementHelper.filterInvalidNonPos","row":38}},"42":{"1":{"ann":"x1:GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {VV : GHC.Types.Int | VV == x1\n                                                                               && VV >= 0\n                                                                               && 0 < VV})","col":1,"ident":"RefinementHelper.intsPos","row":42},"16":{"ann":"{v : GHC.Types.Int | v == n}","col":16,"ident":"n","row":42},"20":{"ann":"GHC.Types.Int","col":20,"ident":"lq_anf$##7205759403792800757","row":42},"27":{"ann":"{VV : forall a b .\n      a -> {v : (Data.Either.Either a b) | isLeft v} | VV == Left}","col":27,"ident":"Data.Either.Left","row":42},"32":{"ann":"[GHC.Types.Char]","col":32,"ident":"lq_anf$##7205759403792800761","row":42},"47":{"ann":"{VV : forall a b .\n      b -> {v : (Data.Either.Either a b) | not (isLeft v)} | VV == Right}","col":47,"ident":"Data.Either.Right","row":42},"53":{"ann":"{v : GHC.Types.Int | v == n}","col":53,"ident":"n","row":42},"9":{"ann":"GHC.Types.Int","col":9,"ident":"n","row":42}},"9":{"1":{"ann":"{VV : GHC.Types.Int | VV == 0}","col":1,"ident":"RefinementHelper.zero","row":9}}}}