(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun GHC.Float.sin () Int)
(declare-fun RefinementHelper.filterInvalidNonPos () Int)
(declare-fun GHC.Float.log () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800752$35$$35$d1Rm () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800772$35$$35$d1RG$35$$35$k_$35$$35$908 () Str)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800766$35$$35$d1RA$35$$35$k_$35$$35$794 () Str)
(declare-fun lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz () Bool)
(declare-fun fst () Int)
(declare-fun GHC.Float.cos () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$908 () Bool)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$908 () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$794 () Int)
(declare-fun GHC.Num.Integer.IP () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800773$35$$35$d1RH () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792800760$35$$35$d1Ru () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw () Int)
(declare-fun lq_tmp$36$x$35$$35$413 () Int)
(declare-fun lq_tmp$36$x$35$$35$529 () Int)
(declare-fun lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800743$35$$35$d1Rd () Str)
(declare-fun lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$794 () Int)
(declare-fun lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 () Int)
(declare-fun RefinementHelper.$36$trModule () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun papp5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800748$35$$35$d1Ri () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Str)
(declare-fun GHC.Float.atan () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 () Int)
(declare-fun GHC.Stack.Types.emptyCallStack () Int)
(declare-fun lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800751$35$$35$d1Rl () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800759$35$$35$d1Rt () Int)
(declare-fun n$35$$35$aUi () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$794 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun RefinementHelper.die () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800753$35$$35$d1Rn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_tmp$36$x$35$$35$904 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$VV$35$$35$673$35$$35$k_$35$$35$674 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 () Bool)
(declare-fun GHC.Stack.Types.pushCallStack () Int)
(declare-fun lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$674 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$604 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800756$35$$35$d1Rq () Int)
(declare-fun lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE () Bool)
(declare-fun GHC.Float.atanh () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun lit$36$src$47$RefinementHelper.hs () Str)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800729$35$$35$d1QZ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800772$35$$35$d1RG () Str)
(declare-fun isLeft () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800761$35$$35$d1Rv () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun RefinementHelper.zero () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$794 () Bool)
(declare-fun GHC.Float.acos () Int)
(declare-fun fix$36$$36$dIP_aVm () Int)
(declare-fun totalityError () Int)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun papp7 () Int)
(declare-fun GHC.Float.pi () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun lq_tmp$36$x$35$$35$898 () Int)
(declare-fun cast_as () Int)
(declare-fun lit$36$RefinementHelper () Str)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lit$36$error () Str)
(declare-fun lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$674 () Int)
(declare-fun lq_tmp$36$x$35$$35$916 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$908 () Bool)
(declare-fun lq_tmp$36$x$35$$35$790 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800767$35$$35$d1RB$35$$35$k_$35$$35$794 () Str)
(declare-fun RefinementHelper.filterInvalid () Int)
(declare-fun GHC.Float.sinh () Int)
(declare-fun lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800758$35$$35$d1Rs () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792800750$35$$35$d1Rk () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$784 () Int)
(declare-fun lq_tmp$36$x$35$$35$571 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800754$35$$35$d1Ro () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$908 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 () Bool)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800757$35$$35$d1Rr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800755$35$$35$d1Rp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF () Bool)
(declare-fun msg$35$$35$aUh () Str)
(declare-fun GHC.Float.cosh () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800741$35$$35$d1Rb () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800773$35$$35$d1RH$35$$35$k_$35$$35$908 () Str)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$VV$35$$35$907$35$$35$k_$35$$35$908 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Num.Integer.IS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800745$35$$35$d1Rf () Str)
(declare-fun lq_tmp$36$x$35$$35$802 () Int)
(declare-fun lq_tmp$36$x$35$$35$528 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 () Int)
(declare-fun papp2 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun snd () Int)
(declare-fun head () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun autolen () Int)
(declare-fun lit$36$Invalid () Str)
(declare-fun GHC.Base.id () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun RefinementHelper.one () Int)
(declare-fun RefinementHelper.two () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_tmp$36$x$35$$35$860 () Int)
(declare-fun lq_tmp$36$x$35$$35$530 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$794 () Bool)
(declare-fun n$35$$35$aUj () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun GHC.Float.sqrt () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800767$35$$35$d1RB () Str)
(declare-fun GHC.Float.exp () Int)
(declare-fun GHC.Float.acosh () Int)
(declare-fun lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Stack.Types.SrcLoc () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800744$35$$35$d1Re () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$794 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792800742$35$$35$d1Rc () Str)
(declare-fun lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800746$35$$35$d1Rg () Str)
(declare-fun GHC.Float.$42$$42$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$794 () Int)
(declare-fun fldList () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$674 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 () Bool)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun papp4 () Int)
(declare-fun lq_tmp$36$x$35$$35$816 () Int)
(declare-fun lq_tmp$36$x$35$$35$917 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun GHC.Num.Integer.IN () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun GHC.Float.asin () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun papp1 () Int)
(declare-fun tail () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800766$35$$35$d1RA () Str)
(declare-fun GHC.Real.mod () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun RefinementHelper.three () Int)
(declare-fun GHC.Float.tanh () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun RefinementHelper.intsGte2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800739$35$$35$d1R9 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$794 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry () Bool)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Float.logBase () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD () Int)
(declare-fun lq_tmp$36$x$35$$35$565 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800747$35$$35$d1Rh () Int)
(declare-fun lit$36$grfn$45$0.1.0.0$45$inplace () Str)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800727$35$$35$d1QX () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_tmp$36$x$35$$35$803 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_tmp$36$x$35$$35$650 () Int)
(declare-fun lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun GHC.Float.asinh () Int)
(declare-fun papp6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 () Bool)
(declare-fun GHC.Float.tan () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800728$35$$35$d1QY () Int)
(declare-fun lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$674 () Int)
(declare-fun lq_tmp$36$x$35$$35$702 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun addrLen () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800726$35$$35$d1QW () Int)
(declare-fun RefinementHelper.intsPos () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$746 () Int)
(declare-fun lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$908 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792800749$35$$35$d1Rj () Int)
(declare-fun lq_karg$36$VV$35$$35$793$35$$35$k_$35$$35$794 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$794 () Int)
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 64))
(declare-fun apply$35$$35$20 (Int (_ BitVec 64)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$18 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$24 (Int (_ BitVec 64)) (_ BitVec 64))
(declare-fun apply$35$$35$19 (Int (_ BitVec 32)) (_ BitVec 64))
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$23 (Int (_ BitVec 64)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$12 (Int Str) Str)
(declare-fun apply$35$$35$7 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) Bool)
(declare-fun apply$35$$35$17 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$13 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 64)) Str)
(declare-fun apply$35$$35$14 (Int Str) (_ BitVec 64))
(declare-fun apply$35$$35$16 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$8 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$21 (Int (_ BitVec 64)) Bool)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 64))
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$10 (Int Str) Int)
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 64))
(declare-fun coerce$35$$35$20 ((_ BitVec 64)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$18 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$24 ((_ BitVec 64)) (_ BitVec 64))
(declare-fun coerce$35$$35$19 ((_ BitVec 32)) (_ BitVec 64))
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$23 ((_ BitVec 64)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$12 (Str) Str)
(declare-fun coerce$35$$35$7 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) Bool)
(declare-fun coerce$35$$35$17 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$13 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 64)) Str)
(declare-fun coerce$35$$35$14 (Str) (_ BitVec 64))
(declare-fun coerce$35$$35$16 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$8 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$21 ((_ BitVec 64)) Bool)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 64))
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$10 (Str) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 64) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$18 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 64) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$19 ((_ BitVec 32) (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 64) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$12 (Str Str) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$17 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$13 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 64) Str) Int)
(declare-fun smt_lambda$35$$35$14 (Str (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$16 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$8 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 64) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 64)) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$15 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 64))
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Str)

(assert (distinct GHC.Types.EQ GHC.Types.LT GHC.Types.GT))

(assert (distinct lit$36$grfn$45$0.1.0.0$45$inplace lit$36$Invalid lit$36$error lit$36$RefinementHelper lit$36$src$47$RefinementHelper.hs))

(assert (distinct GHC.Types.False GHC.Types.True))
(assert (= (strLen lit$36$src$47$RefinementHelper.hs) 23))
(assert (= (strLen lit$36$RefinementHelper) 16))
(assert (= (strLen lit$36$error) 5))
(assert (= (strLen lit$36$Invalid) 7))
(assert (= (strLen lit$36$grfn$45$0.1.0.0$45$inplace) 20))
(push 1)
(define-fun b$36$$35$$35$96 () Bool (= lq_anf$36$$35$$35$7205759403792800727$35$$35$d1QX 1))
(define-fun b$36$$35$$35$97 () Bool (not (= RefinementHelper.one 0)))
(define-fun b$36$$35$$35$98 () Bool (= lq_anf$36$$35$$35$7205759403792800728$35$$35$d1QY 2))
(define-fun b$36$$35$$35$194 () Bool (= VV$35$$35$F$35$$35$9 n$35$$35$aUi))
(define-fun b$36$$35$$35$99 () Bool (not (= RefinementHelper.two 0)))
(define-fun b$36$$35$$35$131 () Bool (= lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw 1))
(define-fun b$36$$35$$35$195 () Bool (and (= VV$35$$35$F$35$$35$12 lq_tmp$36$x$35$$35$802) (>= VV$35$$35$F$35$$35$12 0) (< 0 VV$35$$35$F$35$$35$12)))
(define-fun b$36$$35$$35$100 () Bool (= lq_anf$36$$35$$35$7205759403792800729$35$$35$d1QZ 3))
(define-fun b$36$$35$$35$132 () Bool (= lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw))
(define-fun b$36$$35$$35$196 () Bool (and (= VV$35$$35$F$35$$35$13 lq_tmp$36$x$35$$35$802) (>= VV$35$$35$F$35$$35$13 0) (< 0 VV$35$$35$F$35$$35$13)))
(define-fun b$36$$35$$35$101 () Bool (not (= RefinementHelper.three 0)))
(define-fun b$36$$35$$35$133 () Bool (= lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)))
(define-fun b$36$$35$$35$70 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$102 () Bool (= lq_anf$36$$35$$35$7205759403792800739$35$$35$d1R9 lit$36$error))
(define-fun b$36$$35$$35$134 () Bool (and (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry)))
(define-fun b$36$$35$$35$103 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra) (strLen lq_anf$36$$35$$35$7205759403792800739$35$$35$d1R9)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra) 0) (= lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra lq_anf$36$$35$$35$7205759403792800739$35$$35$d1R9)))
(define-fun b$36$$35$$35$135 () Bool (and (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry)))
(define-fun b$36$$35$$35$104 () Bool (= lq_anf$36$$35$$35$7205759403792800741$35$$35$d1Rb lit$36$grfn$45$0.1.0.0$45$inplace))
(define-fun b$36$$35$$35$136 () Bool (and (not lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry)))
(define-fun b$36$$35$$35$105 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800742$35$$35$d1Rc) (strLen lq_anf$36$$35$$35$7205759403792800741$35$$35$d1Rb)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800742$35$$35$d1Rc) 0) (= lq_anf$36$$35$$35$7205759403792800742$35$$35$d1Rc lq_anf$36$$35$$35$7205759403792800741$35$$35$d1Rb)))
(define-fun b$36$$35$$35$137 () Bool (and (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry)))
(define-fun b$36$$35$$35$106 () Bool (= lq_anf$36$$35$$35$7205759403792800743$35$$35$d1Rd lit$36$RefinementHelper))
(define-fun b$36$$35$$35$138 () Bool (and lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz (< n$35$$35$aUj lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx)) (= lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry)))
(define-fun b$36$$35$$35$107 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800744$35$$35$d1Re) (strLen lq_anf$36$$35$$35$7205759403792800743$35$$35$d1Rd)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800744$35$$35$d1Re) 0) (= lq_anf$36$$35$$35$7205759403792800744$35$$35$d1Re lq_anf$36$$35$$35$7205759403792800743$35$$35$d1Rd)))
(define-fun b$36$$35$$35$139 () Bool (= lq_anf$36$$35$$35$7205759403792800766$35$$35$d1RA lit$36$Invalid))
(define-fun b$36$$35$$35$203 () Bool (= VV$35$$35$F$35$$35$23 n$35$$35$aUj))
(define-fun b$36$$35$$35$108 () Bool (= lq_anf$36$$35$$35$7205759403792800745$35$$35$d1Rf lit$36$src$47$RefinementHelper.hs))
(define-fun b$36$$35$$35$140 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800767$35$$35$d1RB) (strLen lq_anf$36$$35$$35$7205759403792800766$35$$35$d1RA)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800767$35$$35$d1RB) 0) (= lq_anf$36$$35$$35$7205759403792800767$35$$35$d1RB lq_anf$36$$35$$35$7205759403792800766$35$$35$d1RA)))
(define-fun b$36$$35$$35$109 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800746$35$$35$d1Rg) (strLen lq_anf$36$$35$$35$7205759403792800745$35$$35$d1Rf)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800746$35$$35$d1Rg) 0) (= lq_anf$36$$35$$35$7205759403792800746$35$$35$d1Rg lq_anf$36$$35$$35$7205759403792800745$35$$35$d1Rf)))
(define-fun b$36$$35$$35$205 () Bool false)
(define-fun b$36$$35$$35$110 () Bool (= lq_anf$36$$35$$35$7205759403792800747$35$$35$d1Rh 18))
(define-fun b$36$$35$$35$111 () Bool (= lq_anf$36$$35$$35$7205759403792800748$35$$35$d1Ri lq_anf$36$$35$$35$7205759403792800747$35$$35$d1Rh))
(define-fun b$36$$35$$35$112 () Bool (= lq_anf$36$$35$$35$7205759403792800749$35$$35$d1Rj 11))
(define-fun b$36$$35$$35$144 () Bool (= lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC 2))
(define-fun b$36$$35$$35$113 () Bool (= lq_anf$36$$35$$35$7205759403792800750$35$$35$d1Rk lq_anf$36$$35$$35$7205759403792800749$35$$35$d1Rj))
(define-fun b$36$$35$$35$145 () Bool (= lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC))
(define-fun b$36$$35$$35$82 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$114 () Bool (= lq_anf$36$$35$$35$7205759403792800751$35$$35$d1Rl 18))
(define-fun b$36$$35$$35$146 () Bool (= lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)))
(define-fun b$36$$35$$35$115 () Bool (= lq_anf$36$$35$$35$7205759403792800752$35$$35$d1Rm lq_anf$36$$35$$35$7205759403792800751$35$$35$d1Rl))
(define-fun b$36$$35$$35$147 () Bool (and (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE)))
(define-fun b$36$$35$$35$116 () Bool (= lq_anf$36$$35$$35$7205759403792800753$35$$35$d1Rn 16))
(define-fun b$36$$35$$35$148 () Bool (and (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE)))
(define-fun b$36$$35$$35$117 () Bool (= lq_anf$36$$35$$35$7205759403792800754$35$$35$d1Ro lq_anf$36$$35$$35$7205759403792800753$35$$35$d1Rn))
(define-fun b$36$$35$$35$149 () Bool (and (not lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE)))
(define-fun b$36$$35$$35$150 () Bool (and (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE)))
(define-fun b$36$$35$$35$151 () Bool (and lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF (< n$35$$35$aUi lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD)) (= lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE)))
(define-fun b$36$$35$$35$120 () Bool (and (= (apply$35$$35$2 (as fst Int) lq_anf$36$$35$$35$7205759403792800756$35$$35$d1Rq) lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra) (= (apply$35$$35$0 (as snd Int) lq_anf$36$$35$$35$7205759403792800756$35$$35$d1Rq) lq_anf$36$$35$$35$7205759403792800755$35$$35$d1Rp) (= (apply$35$$35$2 (as x_Tuple21 Int) lq_anf$36$$35$$35$7205759403792800756$35$$35$d1Rq) lq_anf$36$$35$$35$7205759403792800740$35$$35$d1Ra) (= (apply$35$$35$0 (as x_Tuple22 Int) lq_anf$36$$35$$35$7205759403792800756$35$$35$d1Rq) lq_anf$36$$35$$35$7205759403792800755$35$$35$d1Rp)))
(define-fun b$36$$35$$35$152 () Bool (= lq_anf$36$$35$$35$7205759403792800772$35$$35$d1RG lit$36$Invalid))
(define-fun b$36$$35$$35$153 () Bool (and (= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800773$35$$35$d1RH) (strLen lq_anf$36$$35$$35$7205759403792800772$35$$35$d1RG)) (>= (apply$35$$35$10 (as len Int) lq_anf$36$$35$$35$7205759403792800773$35$$35$d1RH) 0) (= lq_anf$36$$35$$35$7205759403792800773$35$$35$d1RH lq_anf$36$$35$$35$7205759403792800772$35$$35$d1RG)))
(define-fun b$36$$35$$35$185 () Bool (and (= VV$35$$35$F$35$$35$1 lq_tmp$36$x$35$$35$916) (<= 2 VV$35$$35$F$35$$35$1)))
(define-fun b$36$$35$$35$186 () Bool (= VV$35$$35$F$35$$35$33 lq_anf$36$$35$$35$7205759403792800729$35$$35$d1QZ))
(define-fun b$36$$35$$35$123 () Bool false)
(define-fun b$36$$35$$35$188 () Bool (= VV$35$$35$F$35$$35$34 lq_anf$36$$35$$35$7205759403792800728$35$$35$d1QY))
(define-fun b$36$$35$$35$125 () Bool (= lq_anf$36$$35$$35$7205759403792800758$35$$35$d1Rs lit$36$grfn$45$0.1.0.0$45$inplace))
(define-fun b$36$$35$$35$94 () Bool (= lq_anf$36$$35$$35$7205759403792800726$35$$35$d1QW 0))
(define-fun b$36$$35$$35$190 () Bool (= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$7205759403792800727$35$$35$d1QX))
(define-fun b$36$$35$$35$95 () Bool (= RefinementHelper.zero 0))
(define-fun b$36$$35$$35$127 () Bool (= lq_anf$36$$35$$35$7205759403792800760$35$$35$d1Ru lit$36$RefinementHelper))
(define-fun b$36$$35$$35$191 () Bool (= VV$35$$35$F$35$$35$36 lq_anf$36$$35$$35$7205759403792800726$35$$35$d1QW))
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$125 b$36$$35$$35$95 b$36$$35$$35$127))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$185 b$36$$35$$35$95))
(push 1)
(assert (not (<= 2 VV$35$$35$F$35$$35$1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$100 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$186 b$36$$35$$35$95))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$33 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$82 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$95))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$2 n$35$$35$aUi)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$98 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$188 b$36$$35$$35$95))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$34 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$82 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$95))
(push 1)
(assert (not (<= 2 VV$35$$35$F$35$$35$3)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$96 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$190 b$36$$35$$35$95))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$35 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$94 b$36$$35$$35$191))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 Bool) (lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 Int) (lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 Int) (lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 Int) (lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 Int) (lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 Bool)) (and (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 VV$35$$35$F$35$$35$7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF) (= lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 n$35$$35$aUi) (exists ((VV$35$$35$F$35$$35$9 Int)) (and (= VV$35$$35$F$35$$35$9 n$35$$35$aUi) (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 VV$35$$35$F$35$$35$9) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF) (= lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 n$35$$35$aUi))))) b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$82 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$95))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$7 n$35$$35$aUi)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 Bool) (lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 Int) (lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 Int) (lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 Int) (lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 Int) (lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 Bool)) (and (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 VV$35$$35$F$35$$35$8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF) (= lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 n$35$$35$aUi) (exists ((VV$35$$35$F$35$$35$9 Int)) (and (= VV$35$$35$F$35$$35$9 n$35$$35$aUi) (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$870 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$870 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$870 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$870 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 VV$35$$35$F$35$$35$9) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800768$35$$35$d1RC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800769$35$$35$d1RD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800770$35$$35$d1RE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF$35$$35$k_$35$$35$870 lq_anf$36$$35$$35$7205759403792800771$35$$35$d1RF) (= lq_karg$36$n$35$$35$aUi$35$$35$k_$35$$35$870 n$35$$35$aUi))))) b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$144 b$36$$35$$35$145 b$36$$35$$35$82 b$36$$35$$35$146 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$95))
(push 1)
(assert (not (<= 2 VV$35$$35$F$35$$35$8)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$195 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$12 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$196 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$13)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$137 b$36$$35$$35$138 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$14 n$35$$35$aUj)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$137 b$36$$35$$35$138 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$137 b$36$$35$$35$138 b$36$$35$$35$139 b$36$$35$$35$140 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$16)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 Int) (lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 Bool) (lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 Bool) (lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 Int)) (and (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$20) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj) (exists ((VV$35$$35$F$35$$35$23 Int)) (and (= VV$35$$35$F$35$$35$23 n$35$$35$aUj) (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$23) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj))))) b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$135 b$36$$35$$35$136 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 n$35$$35$aUj)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 Int) (lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 Bool) (lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 Bool) (lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 Int)) (and (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$21) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj) (exists ((VV$35$$35$F$35$$35$23 Int)) (and (= VV$35$$35$F$35$$35$23 n$35$$35$aUj) (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$23) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj))))) b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$135 b$36$$35$$35$136 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 Int) (lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 Int) (lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 Bool) (lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 Bool) (lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 Int)) (and (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$22) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj) (exists ((VV$35$$35$F$35$$35$23 Int)) (and (= VV$35$$35$F$35$$35$23 n$35$$35$aUj) (= lq_karg$36$RefinementHelper.one$35$$35$k_$35$$35$756 RefinementHelper.one) (= lq_karg$36$RefinementHelper.three$35$$35$k_$35$$35$756 RefinementHelper.three) (= lq_karg$36$RefinementHelper.two$35$$35$k_$35$$35$756 RefinementHelper.two) (= lq_karg$36$RefinementHelper.zero$35$$35$k_$35$$35$756 RefinementHelper.zero) (= lq_karg$36$VV$35$$35$755$35$$35$k_$35$$35$756 VV$35$$35$F$35$$35$23) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800762$35$$35$d1Rw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800763$35$$35$d1Rx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800764$35$$35$d1Ry) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz$35$$35$k_$35$$35$756 lq_anf$36$$35$$35$7205759403792800765$35$$35$d1Rz) (= lq_karg$36$n$35$$35$aUj$35$$35$k_$35$$35$756 n$35$$35$aUj))))) b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$131 b$36$$35$$35$132 b$36$$35$$35$101 b$36$$35$$35$133 b$36$$35$$35$70 b$36$$35$$35$134 b$36$$35$$35$135 b$36$$35$$35$136 b$36$$35$$35$82 b$36$$35$$35$95))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$22)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$99 b$36$$35$$35$101 b$36$$35$$35$70 b$36$$35$$35$102 b$36$$35$$35$103 b$36$$35$$35$104 b$36$$35$$35$105 b$36$$35$$35$106 b$36$$35$$35$107 b$36$$35$$35$108 b$36$$35$$35$109 b$36$$35$$35$205 b$36$$35$$35$110 b$36$$35$$35$111 b$36$$35$$35$112 b$36$$35$$35$113 b$36$$35$$35$82 b$36$$35$$35$114 b$36$$35$$35$115 b$36$$35$$35$116 b$36$$35$$35$117 b$36$$35$$35$120 b$36$$35$$35$123 b$36$$35$$35$95))
(push 1)
(assert (not false))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
