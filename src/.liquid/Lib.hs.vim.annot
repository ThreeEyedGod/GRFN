1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
32:1-32:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:32-32:33::x :: "GHC.Types.Int"
32:36-32:37::x :: "{v : GHC.Types.Int | v == x##a7dR}"
32:41-32:42::lq_anf$##7205759403792821778 :: "GHC.Types.Int"
32:45-32:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:52-32:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
32:59-32:73::lq_anf$##7205759403792821818 :: "Data.Text.Internal.Text"
32:64-32:73::lq_anf$##7205759403792821817 :: "[GHC.Types.Char]"
33:36-33:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
33:43-33:57::lq_anf$##7205759403792821815 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
33:49-33:57::lq_anf$##7205759403792821814 :: "(GHC.Types.Int, [GHC.Types.Int])"
33:50-33:51::lq_anf$##7205759403792821809 :: "GHC.Types.Int"
33:53-33:56::lq_anf$##7205759403792821813 :: "[GHC.Types.Int]"
33:54-33:55::lq_anf$##7205759403792821811 :: "GHC.Types.Int"
34:36-34:37::x :: "{v : GHC.Types.Int | v == x##a7dR}"
34:41-34:42::lq_anf$##7205759403792821784 :: "GHC.Types.Int"
35:3-35:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ > 0\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ >= 0\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                          && 0 < $VV##1825##k_\n                                                          && 2 <= $VV##1825##k_})"
35:11-35:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ > 0\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ >= 0\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                                        && 0 < $VV##1825##k_\n                                                                        && 2 <= $VV##1825##k_}))"
35:16-35:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
35:30-35:49::lq_anf$##7205759403792821794 :: "(GHC.Types.IO GHC.Types.Int)"
35:42-35:48::lq_anf$##7205759403792821793 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7dR\n                                      && x_Tuple22 v == x##a7dR}"
35:43-35:44::lq_anf$##7205759403792821792 :: "GHC.Types.Int"
35:46-35:47::x :: "{v : GHC.Types.Int | v == x##a7dR}"
36:8-36:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ > 0\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ >= 0\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                               && 0 < $VV##1825##k_\n                                                               && 2 <= $VV##1825##k_}) | v == rndM##a7dT}"
37:15-37:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
37:22-37:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
37:29-37:43::lq_anf$##7205759403792821798 :: "Data.Text.Internal.Text"
37:34-37:43::lq_anf$##7205759403792821797 :: "[GHC.Types.Char]"
38:20-38:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
38:24-38:33::lq_anf$##7205759403792821804 :: "{v : GHC.Types.Bool | v <=> ps##a7h7 <= x##a7dR}"
38:25-38:27::ps :: "{v : GHC.Types.Int | v == ps##a7h7}"
38:31-38:32::x :: "{v : GHC.Types.Int | v == x##a7dR}"
38:34-38:52::lq_anf$##7205759403792821806 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
38:35-38:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
38:42-38:51::lq_anf$##7205759403792821805 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
38:48-38:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7h4}"
38:53-38:87::lq_anf$##7205759403792821807 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
38:85-38:86::x :: "{v : GHC.Types.Int | v == x##a7dR}"
40:9-40:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
40:14-40:16::ps :: "GHC.Types.Int"
40:18-40:20::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
40:24-40:53::lq_anf$##7205759403792821802 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
40:25-40:35::lq_anf$##7205759403792821800 :: "GHC.Types.Int"
40:33-40:35::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
40:37-40:52::lq_anf$##7205759403792821801 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
40:47-40:52::upper :: "{v : GHC.Types.Int | v == upper##a7dU\n                     && $VV##1825##k_ /= 0\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ > 0\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ >= 0\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                     && 0 < $VV##1825##k_\n                     && 2 <= $VV##1825##k_}"
41:36-41:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
41:43-41:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
41:50-41:64::lq_anf$##7205759403792821789 :: "Data.Text.Internal.Text"
41:55-41:64::lq_anf$##7205759403792821788 :: "[GHC.Types.Char]"
47:1-47:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
47:15-47:18::lq_anf$##7205759403792821774 :: "{v : [GHC.Types.Int] | len v == 0}"
47:16-47:17::lq_anf$##7205759403792821773 :: "GHC.Types.Int"
48:15-48:16::ds_d7ix :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:20-48:21::lq_anf$##7205759403792821762 :: "GHC.Types.Int"
48:29-48:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
48:51-48:65::lq_anf$##7205759403792821767 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:64-48:65::ds_d7ix :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
49:13-49:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
49:23-49:24::lq_anf$##7205759403792821771 :: "GHC.Types.Int"
50:16-50:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
50:28-50:31::okN :: "{v : GHC.Types.Int | v == okN##a7dZ\n                     && v >= 0\n                     && 0 < v}"
51:15-51:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
51:19-51:31::lq_anf$##7205759403792821766 :: "[GHC.Types.Char]"
55:1-55:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
55:17-55:20::lq_anf$##7205759403792821744 :: "{v : [GHC.Types.Int] | len v == 0}"
55:18-55:19::lq_anf$##7205759403792821743 :: "GHC.Types.Int"
56:17-56:18::ds_d7ih :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
56:22-56:23::lq_anf$##7205759403792821723 :: "GHC.Types.Int"
56:26-56:27::lq_anf$##7205759403792821729 :: "GHC.Types.Int"
56:30-56:67::lq_anf$##7205759403792821741 :: "{v : [{v : GHC.Types.Int | $VV##621##k_ /= 0\n                           && $VV##621##k_ > 0\n                           && $VV##621##k_ >= 0\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821728##d7jG##k_\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821729##d7jH##k_\n                           && 0 < $VV##621##k_}] | len $VV##626##k_ >= 0\n                                                   && len $VV##626##k_ <= len $ds_d7in##k_}"
56:31-56:32::ds_d7io :: "GHC.Types.Int"
56:40-56:48::lq_anf$##7205759403792821740 :: "[GHC.Types.Int]"
56:41-56:42::lq_anf$##7205759403792821739 :: "GHC.Types.Int"
56:46-56:47::ds_d7ih :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
56:50-56:51::ds_d7io :: "GHC.Types.Int"
56:54-56:55::lq_anf$##7205759403792821732 :: "GHC.Types.Int"
56:57-56:66::lq_anf$##7205759403792821735 :: "GHC.Types.Bool"
56:65-56:66::ds_d7io :: "GHC.Types.Int"
57:17-57:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
57:21-57:33::lq_anf$##7205759403792821727 :: "[GHC.Types.Char]"
64:1-64:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
64:18-64:19::lq_anf$##7205759403792821758 :: "{v : GHC.Prim.Int# | v == 1}"
65:18-65:27::lq_anf$##7205759403792821747 :: "GHC.Types.Bool"
65:26-65:27::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
65:30-65:31::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
66:18-66:19::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
66:22-66:23::lq_anf$##7205759403792821750 :: "GHC.Types.Int"
66:26-66:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
66:39-66:46::lq_anf$##7205759403792821757 :: "GHC.Types.Int"
66:40-66:41::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
66:44-66:45::lq_anf$##7205759403792821756 :: "GHC.Types.Int"
67:18-67:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
67:22-67:34::lq_anf$##7205759403792821754 :: "[GHC.Types.Char]"
72:1-72:11::Lib.getRndMInt :: "({VV##1398 : GHC.Types.Int | $VV##1398##k_ /= 0\n                             && $VV##1398##k_ > 0\n                             && $VV##1398##k_ >= 0\n                             && 0 < $VV##1398##k_\n                             && 2 <= $VV##1398##k_}, {VV##1400 : GHC.Types.Int | $VV##1400##k_ /= 0\n                                                                                 && $VV##1400##k_ > 0\n                                                                                 && $VV##1400##k_ >= 0\n                                                                                 && 0 < $VV##1400##k_\n                                                                                 && 2 <= $VV##1400##k_})<\\_ VV -> {VV##1403 : GHC.Types.Int | $VV##1403##k_ /= 0\n                                                                                                                                              && $VV##1403##k_ > 0\n                                                                                                                                              && $VV##1403##k_ >= 0\n                                                                                                                                              && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                                                                                                                                              && 0 < $VV##1403##k_\n                                                                                                                                              && 2 <= $VV##1403##k_}> -> (GHC.Types.IO GHC.Types.Int)"
72:21-72:60::$dStatefulGen_a7f3 :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a7f3}"
72:31-72:37::lq_anf$##7205759403792821776 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7e4\n                                      && snd v == u##a7e5\n                                      && x_Tuple21 v == l##a7e4\n                                      && x_Tuple22 v == u##a7e5}"
72:32-72:33::l :: "{v : GHC.Types.Int | v == l##a7e4\n                     && $VV##1398##k_ /= 0\n                     && $VV##1398##k_ > 0\n                     && $VV##1398##k_ >= 0\n                     && 0 < $VV##1398##k_\n                     && 2 <= $VV##1398##k_}"
72:35-72:36::u :: "{v : GHC.Types.Int | v == u##a7e5\n                     && $VV##1400##k_ /= 0\n                     && $VV##1403##k_ /= 0\n                     && $VV##1400##k_ > 0\n                     && $VV##1403##k_ > 0\n                     && $VV##1400##k_ >= 0\n                     && $VV##1403##k_ >= 0\n                     && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                     && 0 < $VV##1400##k_\n                     && 0 < $VV##1403##k_\n                     && 2 <= $VV##1400##k_\n                     && 2 <= $VV##1403##k_}"
72:38-72:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"