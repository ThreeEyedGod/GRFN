1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
30:1-30:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
30:32-30:33::x :: "GHC.Types.Int"
30:36-30:37::x :: "{v : GHC.Types.Int | v == x##a3Hr}"
30:41-30:42::lq_anf$##7205759403792817766 :: "GHC.Types.Int"
30:45-30:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
30:52-30:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
30:59-30:73::lq_anf$##7205759403792817806 :: "Data.Text.Internal.Text"
30:64-30:73::lq_anf$##7205759403792817805 :: "[GHC.Types.Char]"
31:36-31:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:43-31:57::lq_anf$##7205759403792817803 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
31:49-31:57::lq_anf$##7205759403792817802 :: "(GHC.Types.Int, [GHC.Types.Int])"
31:50-31:51::lq_anf$##7205759403792817797 :: "GHC.Types.Int"
31:53-31:56::lq_anf$##7205759403792817801 :: "[GHC.Types.Int]"
31:54-31:55::lq_anf$##7205759403792817799 :: "GHC.Types.Int"
32:36-32:37::x :: "{v : GHC.Types.Int | v == x##a3Hr}"
32:41-32:42::lq_anf$##7205759403792817772 :: "GHC.Types.Int"
33:3-33:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                          && $VV##1820##k_ /= $lq_anf$##7205759403792817765##d6hL##k_\n                                                          && $VV##1820##k_ /= $lq_anf$##7205759403792817766##d6hM##k_\n                                                          && $VV##1820##k_ > 0\n                                                          && $VV##1820##k_ > $lq_anf$##7205759403792817765##d6hL##k_\n                                                          && $VV##1820##k_ > $lq_anf$##7205759403792817766##d6hM##k_\n                                                          && $VV##1820##k_ >= 0\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817765##d6hL##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817766##d6hM##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817771##d6hR##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817772##d6hS##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817779##d6hZ##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817780##d6i0##k_\n                                                          && 0 < $VV##1820##k_\n                                                          && 2 <= $VV##1820##k_})"
33:11-33:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                                        && $VV##1820##k_ /= $lq_anf$##7205759403792817765##d6hL##k_\n                                                                        && $VV##1820##k_ /= $lq_anf$##7205759403792817766##d6hM##k_\n                                                                        && $VV##1820##k_ > 0\n                                                                        && $VV##1820##k_ > $lq_anf$##7205759403792817765##d6hL##k_\n                                                                        && $VV##1820##k_ > $lq_anf$##7205759403792817766##d6hM##k_\n                                                                        && $VV##1820##k_ >= 0\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817765##d6hL##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817766##d6hM##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817771##d6hR##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817772##d6hS##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817779##d6hZ##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817780##d6i0##k_\n                                                                        && 0 < $VV##1820##k_\n                                                                        && 2 <= $VV##1820##k_}))"
33:16-33:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
33:30-33:49::lq_anf$##7205759403792817782 :: "(GHC.Types.IO GHC.Types.Int)"
33:42-33:48::lq_anf$##7205759403792817781 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a3Hr\n                                      && x_Tuple22 v == x##a3Hr}"
33:43-33:44::lq_anf$##7205759403792817780 :: "GHC.Types.Int"
33:46-33:47::x :: "{v : GHC.Types.Int | v == x##a3Hr}"
34:8-34:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                               && $VV##1820##k_ /= $lq_anf$##7205759403792817765##d6hL##k_\n                                                               && $VV##1820##k_ /= $lq_anf$##7205759403792817766##d6hM##k_\n                                                               && $VV##1820##k_ > 0\n                                                               && $VV##1820##k_ > $lq_anf$##7205759403792817765##d6hL##k_\n                                                               && $VV##1820##k_ > $lq_anf$##7205759403792817766##d6hM##k_\n                                                               && $VV##1820##k_ >= 0\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817765##d6hL##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817766##d6hM##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817771##d6hR##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817772##d6hS##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817779##d6hZ##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817780##d6i0##k_\n                                                               && 0 < $VV##1820##k_\n                                                               && 2 <= $VV##1820##k_}) | v == rndM##a3Ht}"
35:15-35:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
35:22-35:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
35:29-35:43::lq_anf$##7205759403792817786 :: "Data.Text.Internal.Text"
35:34-35:43::lq_anf$##7205759403792817785 :: "[GHC.Types.Char]"
36:20-36:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
36:24-36:33::lq_anf$##7205759403792817792 :: "{v : GHC.Types.Bool | v <=> ps##a3KH <= x##a3Hr}"
36:25-36:27::ps :: "{v : GHC.Types.Int | v == ps##a3KH}"
36:31-36:32::x :: "{v : GHC.Types.Int | v == x##a3Hr}"
36:34-36:52::lq_anf$##7205759403792817794 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
36:35-36:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
36:42-36:51::lq_anf$##7205759403792817793 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
36:48-36:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a3KE}"
36:53-36:87::lq_anf$##7205759403792817795 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
36:85-36:86::x :: "{v : GHC.Types.Int | v == x##a3Hr}"
38:9-38:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
38:14-38:16::ps :: "GHC.Types.Int"
38:18-38:20::sq :: "{VV##2059 : [GHC.Types.Int] | false}"
38:24-38:53::lq_anf$##7205759403792817790 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
38:25-38:35::lq_anf$##7205759403792817788 :: "GHC.Types.Int"
38:33-38:35::sq :: "{VV##2059 : [GHC.Types.Int] | false}"
38:37-38:52::lq_anf$##7205759403792817789 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
38:47-38:52::upper :: "{v : GHC.Types.Int | v == upper##a3Hu\n                     && $VV##1820##k_ /= 0\n                     && $VV##1820##k_ /= $lq_anf$##7205759403792817765##d6hL##k_\n                     && $VV##1820##k_ /= $lq_anf$##7205759403792817766##d6hM##k_\n                     && $VV##1820##k_ > 0\n                     && $VV##1820##k_ > $lq_anf$##7205759403792817765##d6hL##k_\n                     && $VV##1820##k_ > $lq_anf$##7205759403792817766##d6hM##k_\n                     && $VV##1820##k_ >= 0\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817765##d6hL##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817766##d6hM##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817771##d6hR##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817772##d6hS##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817779##d6hZ##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817780##d6i0##k_\n                     && 0 < $VV##1820##k_\n                     && 2 <= $VV##1820##k_}"
39:36-39:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
39:43-39:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
39:50-39:64::lq_anf$##7205759403792817777 :: "Data.Text.Internal.Text"
39:55-39:64::lq_anf$##7205759403792817776 :: "[GHC.Types.Char]"
48:1-48:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
48:15-48:18::lq_anf$##7205759403792817762 :: "{v : [GHC.Types.Int] | len v == 0}"
48:16-48:17::lq_anf$##7205759403792817761 :: "GHC.Types.Int"
49:15-49:16::ds_d6fF :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
49:20-49:21::lq_anf$##7205759403792817750 :: "GHC.Types.Int"
49:29-49:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
49:51-49:65::lq_anf$##7205759403792817755 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
49:64-49:65::ds_d6fF :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
50:13-50:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
50:23-50:24::lq_anf$##7205759403792817759 :: "GHC.Types.Int"
51:16-51:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
51:28-51:31::okN :: "{v : GHC.Types.Int | v == okN##a3Hz\n                     && v >= 0\n                     && 0 < v}"
52:15-52:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
52:19-52:31::lq_anf$##7205759403792817754 :: "[GHC.Types.Char]"
60:1-60:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
60:17-60:20::lq_anf$##7205759403792817732 :: "{v : [GHC.Types.Int] | len v == 0}"
60:18-60:19::lq_anf$##7205759403792817731 :: "GHC.Types.Int"
61:17-61:18::ds_d6fp :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
61:22-61:23::lq_anf$##7205759403792817711 :: "GHC.Types.Int"
61:26-61:27::lq_anf$##7205759403792817717 :: "GHC.Types.Int"
61:30-61:67::lq_anf$##7205759403792817729 :: "{v : [{v : GHC.Types.Int | $VV##616##k_ /= 0\n                           && $VV##616##k_ > 0\n                           && $VV##616##k_ >= 0\n                           && $VV##616##k_ >= $lq_anf$##7205759403792817716##d6gY##k_\n                           && $VV##616##k_ >= $lq_anf$##7205759403792817717##d6gZ##k_\n                           && 0 < $VV##616##k_}] | len $VV##621##k_ >= 0\n                                                   && len $VV##621##k_ <= len $ds_d6fv##k_}"
61:31-61:32::ds_d6fw :: "GHC.Types.Int"
61:40-61:48::lq_anf$##7205759403792817728 :: "[GHC.Types.Int]"
61:41-61:42::lq_anf$##7205759403792817727 :: "GHC.Types.Int"
61:46-61:47::ds_d6fp :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
61:50-61:51::ds_d6fw :: "GHC.Types.Int"
61:54-61:55::lq_anf$##7205759403792817720 :: "GHC.Types.Int"
61:57-61:66::lq_anf$##7205759403792817723 :: "GHC.Types.Bool"
61:65-61:66::ds_d6fw :: "GHC.Types.Int"
62:17-62:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
62:21-62:33::lq_anf$##7205759403792817715 :: "[GHC.Types.Char]"
72:1-72:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
72:18-72:19::lq_anf$##7205759403792817746 :: "{v : GHC.Prim.Int# | v == 1}"
73:18-73:27::lq_anf$##7205759403792817735 :: "GHC.Types.Bool"
73:26-73:27::ds_d6es :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
73:30-73:31::ds_d6es :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
74:18-74:19::ds_d6es :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
74:22-74:23::lq_anf$##7205759403792817738 :: "GHC.Types.Int"
74:26-74:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
74:39-74:46::lq_anf$##7205759403792817745 :: "GHC.Types.Int"
74:40-74:41::ds_d6es :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
74:44-74:45::lq_anf$##7205759403792817744 :: "GHC.Types.Int"
75:18-75:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
75:22-75:34::lq_anf$##7205759403792817742 :: "[GHC.Types.Char]"
81:1-81:11::Lib.getRndMInt :: "({VV##1393 : GHC.Types.Int | $VV##1393##k_ /= 0\n                             && $VV##1393##k_ > 0\n                             && $VV##1393##k_ >= 0\n                             && 0 < $VV##1393##k_\n                             && 2 <= $VV##1393##k_}, {VV##1395 : GHC.Types.Int | $VV##1395##k_ /= 0\n                                                                                 && $VV##1395##k_ > 0\n                                                                                 && $VV##1395##k_ >= 0\n                                                                                 && 0 < $VV##1395##k_\n                                                                                 && 2 <= $VV##1395##k_})<\\_ VV -> {VV##1398 : GHC.Types.Int | $VV##1398##k_ /= 0\n                                                                                                                                              && $VV##1398##k_ > 0\n                                                                                                                                              && $VV##1398##k_ >= 0\n                                                                                                                                              && $VV##1398##k_ >= $lq_tmp$x##1397##k_\n                                                                                                                                              && 0 < $VV##1398##k_\n                                                                                                                                              && 2 <= $VV##1398##k_}> -> (GHC.Types.IO GHC.Types.Int)"
81:21-81:60::$dStatefulGen_a3ID :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a3ID}"
81:31-81:37::lq_anf$##7205759403792817764 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a3HE\n                                      && snd v == u##a3HF\n                                      && x_Tuple21 v == l##a3HE\n                                      && x_Tuple22 v == u##a3HF}"
81:32-81:33::l :: "{v : GHC.Types.Int | v == l##a3HE\n                     && $VV##1393##k_ /= 0\n                     && $VV##1393##k_ > 0\n                     && $VV##1393##k_ >= 0\n                     && 0 < $VV##1393##k_\n                     && 2 <= $VV##1393##k_}"
81:35-81:36::u :: "{v : GHC.Types.Int | v == u##a3HF\n                     && $VV##1395##k_ /= 0\n                     && $VV##1398##k_ /= 0\n                     && $VV##1395##k_ > 0\n                     && $VV##1398##k_ > 0\n                     && $VV##1395##k_ >= 0\n                     && $VV##1398##k_ >= 0\n                     && $VV##1398##k_ >= $lq_tmp$x##1397##k_\n                     && 0 < $VV##1395##k_\n                     && 0 < $VV##1398##k_\n                     && 2 <= $VV##1395##k_\n                     && 2 <= $VV##1398##k_}"
81:38-81:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"