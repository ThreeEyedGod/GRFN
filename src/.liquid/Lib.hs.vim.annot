1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
27:1-27:15::Lib.createBasicSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                                                                              && 0 < VV##0}]))"
27:16-27:17::x :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0}"
27:20-27:21::x :: "{v : GHC.Types.Int | v == x##a7hi\n                     && v >= 0\n                     && 0 < v}"
27:25-27:26::lq_anf$##7205759403792822018 :: "GHC.Types.Int"
27:29-27:33::_ :: "(Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]))"
27:36-27:40::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) | isLeft v}"
27:43-27:57::lq_anf$##7205759403792822048 :: "Data.Text.Internal.Text"
27:48-27:57::lq_anf$##7205759403792822047 :: "[GHC.Types.Char]"
28:21-28:25::_ :: "(Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]))"
28:28-28:37::lq_anf$##7205759403792822045 :: "{v : (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) | not (isLeft v)}"
28:34-28:37::lq_anf$##7205759403792822044 :: "[GHC.Types.Int]"
28:35-28:36::lq_anf$##7205759403792822042 :: "GHC.Types.Int"
29:20-29:21::x :: "{v : GHC.Types.Int | v == x##a7hi\n                     && v >= 0\n                     && 0 < v}"
29:25-29:26::lq_anf$##7205759403792822024 :: "GHC.Types.Int"
30:3-30:7::seed :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
30:11-30:28::_ :: "(GHC.Types.IO {v : GHC.Types.Int | v >= 0\n                                   && 0 < v})"
30:22-30:28::lq_anf$##7205759403792822033 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7hi\n                                      && x_Tuple22 v == x##a7hi}"
30:23-30:24::lq_anf$##7205759403792822032 :: "GHC.Types.Int"
30:26-30:27::x :: "{v : GHC.Types.Int | v == x##a7hi\n                     && v >= 0\n                     && 0 < v}"
31:3-31:4::x :: "(Data.Either.Either Data.Text.Internal.Text [{v : GHC.Types.Int | v >= 0\n                                                                  && 0 < v}])"
31:8-31:27::Lib.createBasicSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                                                                              && 0 < VV##0}]))"
31:23-31:27::seed :: "{v : GHC.Types.Int | v == seed##a7hk\n                     && v >= 0\n                     && 0 < v}"
32:8-32:9::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text [{v : GHC.Types.Int | v >= 0\n                                                                       && 0 < v}]) | v == x##a7hl}"
33:15-33:19::_ :: "(Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]))"
33:22-33:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) | isLeft v}"
33:29-33:43::lq_anf$##7205759403792822037 :: "Data.Text.Internal.Text"
33:34-33:43::lq_anf$##7205759403792822036 :: "[GHC.Types.Char]"
34:18-34:22::_ :: "(Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]))"
34:25-34:43::lq_anf$##7205759403792822040 :: "{v : (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) | not (isLeft v)}"
34:31-34:43::lq_anf$##7205759403792822039 :: "{v : [GHC.Types.Int] | head v == seed##a7hk\n                       && len v == 1 + len nxt##a7hm\n                       && tail v == nxt##a7hm}"
34:32-34:36::seed :: "{v : GHC.Types.Int | v == seed##a7hk\n                     && v >= 0\n                     && 0 < v}"
34:39-34:42::nxt :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | v == nxt##a7hm\n                                        && len v >= 0}"
35:20-35:24::_ :: "(Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]))"
35:27-35:31::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text [GHC.Types.Int]) | isLeft v}"
35:34-35:48::lq_anf$##7205759403792822029 :: "Data.Text.Internal.Text"
35:39-35:48::lq_anf$##7205759403792822028 :: "[GHC.Types.Char]"
43:1-43:32::Lib.genARandomPreFactoredNumberLTEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
43:33-43:34::x :: "GHC.Types.Int"
43:37-43:38::x :: "{v : GHC.Types.Int | v == x##a7hn}"
43:42-43:43::lq_anf$##7205759403792822051 :: "GHC.Types.Int"
43:46-43:50::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
43:53-43:57::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
43:60-43:74::lq_anf$##7205759403792822098 :: "Data.Text.Internal.Text"
43:65-43:74::lq_anf$##7205759403792822097 :: "[GHC.Types.Char]"
44:37-44:41::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
44:44-44:58::lq_anf$##7205759403792822095 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
44:50-44:58::lq_anf$##7205759403792822094 :: "(GHC.Types.Int, [GHC.Types.Int])"
44:51-44:52::lq_anf$##7205759403792822089 :: "GHC.Types.Int"
44:54-44:57::lq_anf$##7205759403792822093 :: "[GHC.Types.Int]"
44:55-44:56::lq_anf$##7205759403792822091 :: "GHC.Types.Int"
45:37-45:38::x :: "{v : GHC.Types.Int | v == x##a7hn}"
45:42-45:43::lq_anf$##7205759403792822057 :: "GHC.Types.Int"
46:3-46:4::m :: "(Data.Either.Either Data.Text.Internal.Text [{v : GHC.Types.Int | v >= 0\n                                                                  && 0 < v}])"
46:8-46:24::Lib.createBasicSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                                                                              && 0 < VV##0}]))"
46:23-46:24::x :: "{v : GHC.Types.Int | v == x##a7hn}"
47:8-47:9::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text [{v : GHC.Types.Int | v >= 0\n                                                                       && 0 < v}]) | v == m##a7hp}"
48:15-48:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
48:22-48:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
48:29-48:43::lq_anf$##7205759403792822067 :: "Data.Text.Internal.Text"
48:34-48:43::lq_anf$##7205759403792822066 :: "[GHC.Types.Char]"
49:25-49:93::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
49:29-49:38::lq_anf$##7205759403792822084 :: "{v : GHC.Types.Bool | v <=> ps##a7lk <= x##a7hn}"
49:30-49:32::ps :: "{v : GHC.Types.Int | v == ps##a7lk}"
49:36-49:37::x :: "{v : GHC.Types.Int | v == x##a7hn}"
49:39-49:57::lq_anf$##7205759403792822086 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
49:40-49:44::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
49:47-49:56::lq_anf$##7205759403792822085 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
49:53-49:56::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7lh}"
49:58-49:93::lq_anf$##7205759403792822087 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
49:91-49:92::x :: "{v : GHC.Types.Int | v == x##a7hn}"
51:9-51:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
51:14-51:16::ps :: "GHC.Types.Int"
51:18-51:20::sq :: "[GHC.Types.Int]"
51:24-51:85::lq_anf$##7205759403792822082 :: "(GHC.Types.Int, [GHC.Types.Int])"
51:25-51:35::lq_anf$##7205759403792822069 :: "GHC.Types.Int"
51:33-51:35::sq :: "[GHC.Types.Int]"
51:37-51:38::lq_anf$##7205759403792822071 :: "GHC.Types.Int"
51:41-51:84::lq_anf$##7205759403792822080 :: "[GHC.Types.Int]"
51:42-51:43::ds_d7n9 :: "GHC.Types.Int"
51:51-51:76::lq_anf$##7205759403792822079 :: "{v : [GHC.Types.Int] | len v <= len seqNumbers##a7hq}"
51:58-51:65::lq_anf$##7205759403792822078 :: "GHC.Types.Int -> GHC.Types.Bool"
51:66-51:76::seqNumbers :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | v == seqNumbers##a7hq\n                                        && len v >= 0}"
51:78-51:79::ds_d7n9 :: "GHC.Types.Int"
51:82-51:83::lq_anf$##7205759403792822074 :: "GHC.Types.Int"
52:37-52:41::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
52:44-52:48::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
52:51-52:65::lq_anf$##7205759403792822062 :: "Data.Text.Internal.Text"
52:56-52:65::lq_anf$##7205759403792822061 :: "[GHC.Types.Char]"
60:1-60:11::Lib.getRndMInt :: "x1:{v : ({VV##0 : GHC.Types.Int | VV##0 >= 0\n                                  && 0 < VV##0}, {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                          && 0 < VV##0}) | fst v > 0\n                                                                                           && fst v <= snd v} -> (GHC.Types.IO {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                                                                                                        && VV##0 >= fst x1\n                                                                                                                                                        && 0 < VV##0\n                                                                                                                                                        && VV##0 <= snd x1})"
60:21-60:22::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
60:26-60:27::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
60:31-60:32::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
60:35-60:36::lq_anf$##7205759403792821986 :: "GHC.Types.Int"
61:3-61:9::result :: "GHC.Types.Int"
61:13-61:52::_ :: "(GHC.Types.IO GHC.Types.Int)"
61:23-61:29::lq_anf$##7205759403792822014 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7hv\n                                      && snd v == u##a7hw\n                                      && x_Tuple21 v == l##a7hv\n                                      && x_Tuple22 v == u##a7hw}"
61:24-61:25::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
61:27-61:28::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
61:30-61:42::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"
62:3-62:7::_ :: "GHC.Types.Int -> (GHC.Types.IO GHC.Types.Int)"
62:10-62:16::result :: "{v : GHC.Types.Int | v == result##a7hx}"
62:23-62:24::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
62:31-62:32::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
63:21-63:39::lq_anf$##7205759403792821996 :: "GHC.Types.Bool"
63:22-63:23::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
63:27-63:28::lq_anf$##7205759403792821991 :: "GHC.Types.Int"
63:32-63:33::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
63:37-63:38::lq_anf$##7205759403792821994 :: "GHC.Types.Int"
63:43-63:50::lq_anf$##7205759403792821997 :: "{v : GHC.Types.Bool | v <=> l##a7hv > u##a7hw}"
63:44-63:45::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
63:48-63:49::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
63:53-63:69::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
63:57-63:69::lq_anf$##7205759403792822013 :: "[GHC.Types.Char]"
64:21-64:22::l :: "{v : GHC.Types.Int | v == l##a7hv\n                     && v >= 0\n                     && 0 < v}"
64:25-64:26::lq_anf$##7205759403792822001 :: "GHC.Types.Int"
64:30-64:31::u :: "{v : GHC.Types.Int | v == u##a7hw\n                     && v >= 0\n                     && 0 < v}"
64:34-64:35::lq_anf$##7205759403792822004 :: "GHC.Types.Int"
64:38-64:54::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
64:42-64:54::lq_anf$##7205759403792822011 :: "[GHC.Types.Char]"
65:16-65:32::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
65:20-65:32::lq_anf$##7205759403792822009 :: "[GHC.Types.Char]"