1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
31:1-31:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:32-31:33::x :: "GHC.Types.Int"
31:36-31:37::x :: "{v : GHC.Types.Int | v == x##a3Hn}"
31:41-31:42::lq_anf$##7205759403792817762 :: "GHC.Types.Int"
31:45-31:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:52-31:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
31:59-31:73::lq_anf$##7205759403792817802 :: "Data.Text.Internal.Text"
31:64-31:73::lq_anf$##7205759403792817801 :: "[GHC.Types.Char]"
32:36-32:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:43-32:57::lq_anf$##7205759403792817799 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
32:49-32:57::lq_anf$##7205759403792817798 :: "(GHC.Types.Int, [GHC.Types.Int])"
32:50-32:51::lq_anf$##7205759403792817793 :: "GHC.Types.Int"
32:53-32:56::lq_anf$##7205759403792817797 :: "[GHC.Types.Int]"
32:54-32:55::lq_anf$##7205759403792817795 :: "GHC.Types.Int"
33:36-33:37::x :: "{v : GHC.Types.Int | v == x##a3Hn}"
33:41-33:42::lq_anf$##7205759403792817768 :: "GHC.Types.Int"
34:3-34:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                          && $VV##1820##k_ /= $lq_anf$##7205759403792817761##d6hH##k_\n                                                          && $VV##1820##k_ /= $lq_anf$##7205759403792817762##d6hI##k_\n                                                          && $VV##1820##k_ > 0\n                                                          && $VV##1820##k_ > $lq_anf$##7205759403792817761##d6hH##k_\n                                                          && $VV##1820##k_ > $lq_anf$##7205759403792817762##d6hI##k_\n                                                          && $VV##1820##k_ >= 0\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817761##d6hH##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817762##d6hI##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817767##d6hN##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817768##d6hO##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817775##d6hV##k_\n                                                          && $VV##1820##k_ >= $lq_anf$##7205759403792817776##d6hW##k_\n                                                          && 0 < $VV##1820##k_\n                                                          && 2 <= $VV##1820##k_})"
34:11-34:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                                        && $VV##1820##k_ /= $lq_anf$##7205759403792817761##d6hH##k_\n                                                                        && $VV##1820##k_ /= $lq_anf$##7205759403792817762##d6hI##k_\n                                                                        && $VV##1820##k_ > 0\n                                                                        && $VV##1820##k_ > $lq_anf$##7205759403792817761##d6hH##k_\n                                                                        && $VV##1820##k_ > $lq_anf$##7205759403792817762##d6hI##k_\n                                                                        && $VV##1820##k_ >= 0\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817761##d6hH##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817762##d6hI##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817767##d6hN##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817768##d6hO##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817775##d6hV##k_\n                                                                        && $VV##1820##k_ >= $lq_anf$##7205759403792817776##d6hW##k_\n                                                                        && 0 < $VV##1820##k_\n                                                                        && 2 <= $VV##1820##k_}))"
34:16-34:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
34:30-34:49::lq_anf$##7205759403792817778 :: "(GHC.Types.IO GHC.Types.Int)"
34:42-34:48::lq_anf$##7205759403792817777 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a3Hn\n                                      && x_Tuple22 v == x##a3Hn}"
34:43-34:44::lq_anf$##7205759403792817776 :: "GHC.Types.Int"
34:46-34:47::x :: "{v : GHC.Types.Int | v == x##a3Hn}"
35:8-35:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1820##k_ /= 0\n                                                               && $VV##1820##k_ /= $lq_anf$##7205759403792817761##d6hH##k_\n                                                               && $VV##1820##k_ /= $lq_anf$##7205759403792817762##d6hI##k_\n                                                               && $VV##1820##k_ > 0\n                                                               && $VV##1820##k_ > $lq_anf$##7205759403792817761##d6hH##k_\n                                                               && $VV##1820##k_ > $lq_anf$##7205759403792817762##d6hI##k_\n                                                               && $VV##1820##k_ >= 0\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817761##d6hH##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817762##d6hI##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817767##d6hN##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817768##d6hO##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817775##d6hV##k_\n                                                               && $VV##1820##k_ >= $lq_anf$##7205759403792817776##d6hW##k_\n                                                               && 0 < $VV##1820##k_\n                                                               && 2 <= $VV##1820##k_}) | v == rndM##a3Hp}"
36:15-36:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
36:22-36:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
36:29-36:43::lq_anf$##7205759403792817782 :: "Data.Text.Internal.Text"
36:34-36:43::lq_anf$##7205759403792817781 :: "[GHC.Types.Char]"
37:20-37:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
37:24-37:33::lq_anf$##7205759403792817788 :: "{v : GHC.Types.Bool | v <=> ps##a3KD <= x##a3Hn}"
37:25-37:27::ps :: "{v : GHC.Types.Int | v == ps##a3KD}"
37:31-37:32::x :: "{v : GHC.Types.Int | v == x##a3Hn}"
37:34-37:52::lq_anf$##7205759403792817790 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
37:35-37:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
37:42-37:51::lq_anf$##7205759403792817789 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
37:48-37:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a3KA}"
37:53-37:87::lq_anf$##7205759403792817791 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
37:85-37:86::x :: "{v : GHC.Types.Int | v == x##a3Hn}"
39:9-39:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
39:14-39:16::ps :: "GHC.Types.Int"
39:18-39:20::sq :: "{VV##2059 : [GHC.Types.Int] | false}"
39:24-39:53::lq_anf$##7205759403792817786 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
39:25-39:35::lq_anf$##7205759403792817784 :: "GHC.Types.Int"
39:33-39:35::sq :: "{VV##2059 : [GHC.Types.Int] | false}"
39:37-39:52::lq_anf$##7205759403792817785 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
39:47-39:52::upper :: "{v : GHC.Types.Int | v == upper##a3Hq\n                     && $VV##1820##k_ /= 0\n                     && $VV##1820##k_ /= $lq_anf$##7205759403792817761##d6hH##k_\n                     && $VV##1820##k_ /= $lq_anf$##7205759403792817762##d6hI##k_\n                     && $VV##1820##k_ > 0\n                     && $VV##1820##k_ > $lq_anf$##7205759403792817761##d6hH##k_\n                     && $VV##1820##k_ > $lq_anf$##7205759403792817762##d6hI##k_\n                     && $VV##1820##k_ >= 0\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817761##d6hH##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817762##d6hI##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817767##d6hN##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817768##d6hO##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817775##d6hV##k_\n                     && $VV##1820##k_ >= $lq_anf$##7205759403792817776##d6hW##k_\n                     && 0 < $VV##1820##k_\n                     && 2 <= $VV##1820##k_}"
40:36-40:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
40:43-40:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
40:50-40:64::lq_anf$##7205759403792817773 :: "Data.Text.Internal.Text"
40:55-40:64::lq_anf$##7205759403792817772 :: "[GHC.Types.Char]"
46:1-46:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
46:15-46:18::lq_anf$##7205759403792817758 :: "{v : [GHC.Types.Int] | len v == 0}"
46:16-46:17::lq_anf$##7205759403792817757 :: "GHC.Types.Int"
47:15-47:16::ds_d6fB :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:20-47:21::lq_anf$##7205759403792817746 :: "GHC.Types.Int"
47:29-47:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
47:51-47:65::lq_anf$##7205759403792817751 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:64-47:65::ds_d6fB :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:13-48:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
48:23-48:24::lq_anf$##7205759403792817755 :: "GHC.Types.Int"
49:16-49:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
49:28-49:31::okN :: "{v : GHC.Types.Int | v == okN##a3Hv\n                     && v >= 0\n                     && 0 < v}"
50:15-50:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
50:19-50:31::lq_anf$##7205759403792817750 :: "[GHC.Types.Char]"
54:1-54:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
54:17-54:20::lq_anf$##7205759403792817728 :: "{v : [GHC.Types.Int] | len v == 0}"
54:18-54:19::lq_anf$##7205759403792817727 :: "GHC.Types.Int"
55:17-55:18::ds_d6fl :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:22-55:23::lq_anf$##7205759403792817707 :: "GHC.Types.Int"
55:26-55:27::lq_anf$##7205759403792817713 :: "GHC.Types.Int"
55:30-55:67::lq_anf$##7205759403792817725 :: "{v : [{v : GHC.Types.Int | $VV##616##k_ /= 0\n                           && $VV##616##k_ > 0\n                           && $VV##616##k_ >= 0\n                           && $VV##616##k_ >= $lq_anf$##7205759403792817712##d6gU##k_\n                           && $VV##616##k_ >= $lq_anf$##7205759403792817713##d6gV##k_\n                           && 0 < $VV##616##k_}] | len $VV##621##k_ >= 0\n                                                   && len $VV##621##k_ <= len $ds_d6fr##k_}"
55:31-55:32::ds_d6fs :: "GHC.Types.Int"
55:40-55:48::lq_anf$##7205759403792817724 :: "[GHC.Types.Int]"
55:41-55:42::lq_anf$##7205759403792817723 :: "GHC.Types.Int"
55:46-55:47::ds_d6fl :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:50-55:51::ds_d6fs :: "GHC.Types.Int"
55:54-55:55::lq_anf$##7205759403792817716 :: "GHC.Types.Int"
55:57-55:66::lq_anf$##7205759403792817719 :: "GHC.Types.Bool"
55:65-55:66::ds_d6fs :: "GHC.Types.Int"
56:17-56:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
56:21-56:33::lq_anf$##7205759403792817711 :: "[GHC.Types.Char]"
63:1-63:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
63:18-63:19::lq_anf$##7205759403792817742 :: "{v : GHC.Prim.Int# | v == 1}"
64:18-64:27::lq_anf$##7205759403792817731 :: "GHC.Types.Bool"
64:26-64:27::ds_d6eo :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
64:30-64:31::ds_d6eo :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
65:18-65:19::ds_d6eo :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
65:22-65:23::lq_anf$##7205759403792817734 :: "GHC.Types.Int"
65:26-65:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
65:39-65:46::lq_anf$##7205759403792817741 :: "GHC.Types.Int"
65:40-65:41::ds_d6eo :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
65:44-65:45::lq_anf$##7205759403792817740 :: "GHC.Types.Int"
66:18-66:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
66:22-66:34::lq_anf$##7205759403792817738 :: "[GHC.Types.Char]"
71:1-71:11::Lib.getRndMInt :: "({VV##1393 : GHC.Types.Int | $VV##1393##k_ /= 0\n                             && $VV##1393##k_ > 0\n                             && $VV##1393##k_ >= 0\n                             && 0 < $VV##1393##k_\n                             && 2 <= $VV##1393##k_}, {VV##1395 : GHC.Types.Int | $VV##1395##k_ /= 0\n                                                                                 && $VV##1395##k_ > 0\n                                                                                 && $VV##1395##k_ >= 0\n                                                                                 && 0 < $VV##1395##k_\n                                                                                 && 2 <= $VV##1395##k_})<\\_ VV -> {VV##1398 : GHC.Types.Int | $VV##1398##k_ /= 0\n                                                                                                                                              && $VV##1398##k_ > 0\n                                                                                                                                              && $VV##1398##k_ >= 0\n                                                                                                                                              && $VV##1398##k_ >= $lq_tmp$x##1397##k_\n                                                                                                                                              && 0 < $VV##1398##k_\n                                                                                                                                              && 2 <= $VV##1398##k_}> -> (GHC.Types.IO GHC.Types.Int)"
71:21-71:60::$dStatefulGen_a3Iz :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a3Iz}"
71:31-71:37::lq_anf$##7205759403792817760 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a3HA\n                                      && snd v == u##a3HB\n                                      && x_Tuple21 v == l##a3HA\n                                      && x_Tuple22 v == u##a3HB}"
71:32-71:33::l :: "{v : GHC.Types.Int | v == l##a3HA\n                     && $VV##1393##k_ /= 0\n                     && $VV##1393##k_ > 0\n                     && $VV##1393##k_ >= 0\n                     && 0 < $VV##1393##k_\n                     && 2 <= $VV##1393##k_}"
71:35-71:36::u :: "{v : GHC.Types.Int | v == u##a3HB\n                     && $VV##1395##k_ /= 0\n                     && $VV##1398##k_ /= 0\n                     && $VV##1395##k_ > 0\n                     && $VV##1398##k_ > 0\n                     && $VV##1395##k_ >= 0\n                     && $VV##1398##k_ >= 0\n                     && $VV##1398##k_ >= $lq_tmp$x##1397##k_\n                     && 0 < $VV##1395##k_\n                     && 0 < $VV##1398##k_\n                     && 2 <= $VV##1395##k_\n                     && 2 <= $VV##1398##k_}"
71:38-71:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"