1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
26:1-26:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:32-26:33::x :: "GHC.Types.Int"
26:36-26:37::x :: "{v : GHC.Types.Int | v == x##a7e0}"
26:41-26:42::lq_anf$##7205759403792821787 :: "GHC.Types.Int"
26:45-26:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:52-26:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
26:59-26:73::lq_anf$##7205759403792821827 :: "Data.Text.Internal.Text"
26:64-26:73::lq_anf$##7205759403792821826 :: "[GHC.Types.Char]"
27:36-27:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:43-27:57::lq_anf$##7205759403792821824 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
27:49-27:57::lq_anf$##7205759403792821823 :: "(GHC.Types.Int, [GHC.Types.Int])"
27:50-27:51::lq_anf$##7205759403792821818 :: "GHC.Types.Int"
27:53-27:56::lq_anf$##7205759403792821822 :: "[GHC.Types.Int]"
27:54-27:55::lq_anf$##7205759403792821820 :: "GHC.Types.Int"
28:36-28:37::x :: "{v : GHC.Types.Int | v == x##a7e0}"
28:41-28:42::lq_anf$##7205759403792821793 :: "GHC.Types.Int"
29:3-29:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821786##d7kC##k_\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821787##d7kD##k_\n                                                          && $VV##1825##k_ > 0\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821786##d7kC##k_\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821787##d7kD##k_\n                                                          && $VV##1825##k_ >= 0\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821786##d7kC##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821787##d7kD##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821793##d7kJ##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821800##d7kQ##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821801##d7kR##k_\n                                                          && 0 < $VV##1825##k_\n                                                          && 2 <= $VV##1825##k_})"
29:11-29:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821786##d7kC##k_\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821787##d7kD##k_\n                                                                        && $VV##1825##k_ > 0\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821786##d7kC##k_\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821787##d7kD##k_\n                                                                        && $VV##1825##k_ >= 0\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821786##d7kC##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821787##d7kD##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821793##d7kJ##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821800##d7kQ##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821801##d7kR##k_\n                                                                        && 0 < $VV##1825##k_\n                                                                        && 2 <= $VV##1825##k_}))"
29:16-29:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
29:30-29:49::lq_anf$##7205759403792821803 :: "(GHC.Types.IO GHC.Types.Int)"
29:42-29:48::lq_anf$##7205759403792821802 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7e0\n                                      && x_Tuple22 v == x##a7e0}"
29:43-29:44::lq_anf$##7205759403792821801 :: "GHC.Types.Int"
29:46-29:47::x :: "{v : GHC.Types.Int | v == x##a7e0}"
30:8-30:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821786##d7kC##k_\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821787##d7kD##k_\n                                                               && $VV##1825##k_ > 0\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821786##d7kC##k_\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821787##d7kD##k_\n                                                               && $VV##1825##k_ >= 0\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821786##d7kC##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821787##d7kD##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821793##d7kJ##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821800##d7kQ##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821801##d7kR##k_\n                                                               && 0 < $VV##1825##k_\n                                                               && 2 <= $VV##1825##k_}) | v == rndM##a7e2}"
31:15-31:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:22-31:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
31:29-31:43::lq_anf$##7205759403792821807 :: "Data.Text.Internal.Text"
31:34-31:43::lq_anf$##7205759403792821806 :: "[GHC.Types.Char]"
32:20-32:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
32:24-32:33::lq_anf$##7205759403792821813 :: "{v : GHC.Types.Bool | v <=> ps##a7hg <= x##a7e0}"
32:25-32:27::ps :: "{v : GHC.Types.Int | v == ps##a7hg}"
32:31-32:32::x :: "{v : GHC.Types.Int | v == x##a7e0}"
32:34-32:52::lq_anf$##7205759403792821815 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:35-32:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:42-32:51::lq_anf$##7205759403792821814 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
32:48-32:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7hd}"
32:53-32:87::lq_anf$##7205759403792821816 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:85-32:86::x :: "{v : GHC.Types.Int | v == x##a7e0}"
34:9-34:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
34:14-34:16::ps :: "GHC.Types.Int"
34:18-34:20::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
34:24-34:53::lq_anf$##7205759403792821811 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
34:25-34:35::lq_anf$##7205759403792821809 :: "GHC.Types.Int"
34:33-34:35::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
34:37-34:52::lq_anf$##7205759403792821810 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
34:47-34:52::upper :: "{v : GHC.Types.Int | v == upper##a7e3\n                     && $VV##1825##k_ /= 0\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821786##d7kC##k_\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821787##d7kD##k_\n                     && $VV##1825##k_ > 0\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821786##d7kC##k_\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821787##d7kD##k_\n                     && $VV##1825##k_ >= 0\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821786##d7kC##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821787##d7kD##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821793##d7kJ##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821800##d7kQ##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821801##d7kR##k_\n                     && 0 < $VV##1825##k_\n                     && 2 <= $VV##1825##k_}"
35:36-35:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
35:43-35:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
35:50-35:64::lq_anf$##7205759403792821798 :: "Data.Text.Internal.Text"
35:55-35:64::lq_anf$##7205759403792821797 :: "[GHC.Types.Char]"
44:1-44:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
44:15-44:18::lq_anf$##7205759403792821783 :: "{v : [GHC.Types.Int] | len v == 0}"
44:16-44:17::lq_anf$##7205759403792821782 :: "GHC.Types.Int"
45:15-45:16::ds_d7iG :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
45:20-45:21::lq_anf$##7205759403792821771 :: "GHC.Types.Int"
45:29-45:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
45:51-45:65::lq_anf$##7205759403792821776 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
45:64-45:65::ds_d7iG :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
46:13-46:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
46:23-46:24::lq_anf$##7205759403792821780 :: "GHC.Types.Int"
47:16-47:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
47:28-47:31::okN :: "{v : GHC.Types.Int | v == okN##a7e8\n                     && v >= 0\n                     && 0 < v}"
48:15-48:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
48:19-48:31::lq_anf$##7205759403792821775 :: "[GHC.Types.Char]"
56:1-56:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
56:17-56:20::lq_anf$##7205759403792821753 :: "{v : [GHC.Types.Int] | len v == 0}"
56:18-56:19::lq_anf$##7205759403792821752 :: "GHC.Types.Int"
57:17-57:18::ds_d7iq :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
57:22-57:23::lq_anf$##7205759403792821732 :: "GHC.Types.Int"
57:26-57:27::lq_anf$##7205759403792821738 :: "GHC.Types.Int"
57:30-57:67::lq_anf$##7205759403792821750 :: "{v : [{v : GHC.Types.Int | $VV##621##k_ /= 0\n                           && $VV##621##k_ > 0\n                           && $VV##621##k_ >= 0\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821737##d7jP##k_\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821738##d7jQ##k_\n                           && 0 < $VV##621##k_}] | len $VV##626##k_ >= 0\n                                                   && len $VV##626##k_ <= len $ds_d7iw##k_}"
57:31-57:32::ds_d7ix :: "GHC.Types.Int"
57:40-57:48::lq_anf$##7205759403792821749 :: "[GHC.Types.Int]"
57:41-57:42::lq_anf$##7205759403792821748 :: "GHC.Types.Int"
57:46-57:47::ds_d7iq :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
57:50-57:51::ds_d7ix :: "GHC.Types.Int"
57:54-57:55::lq_anf$##7205759403792821741 :: "GHC.Types.Int"
57:57-57:66::lq_anf$##7205759403792821744 :: "GHC.Types.Bool"
57:65-57:66::ds_d7ix :: "GHC.Types.Int"
58:17-58:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
58:21-58:33::lq_anf$##7205759403792821736 :: "[GHC.Types.Char]"
68:1-68:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
68:18-68:19::lq_anf$##7205759403792821767 :: "{v : GHC.Prim.Int# | v == 1}"
69:18-69:27::lq_anf$##7205759403792821756 :: "GHC.Types.Bool"
69:26-69:27::ds_d7ic :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
69:30-69:31::ds_d7ic :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
70:18-70:19::ds_d7ic :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
70:22-70:23::lq_anf$##7205759403792821759 :: "GHC.Types.Int"
70:26-70:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
70:39-70:46::lq_anf$##7205759403792821766 :: "GHC.Types.Int"
70:40-70:41::ds_d7ic :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
70:44-70:45::lq_anf$##7205759403792821765 :: "GHC.Types.Int"
71:18-71:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
71:22-71:34::lq_anf$##7205759403792821763 :: "[GHC.Types.Char]"
77:1-77:11::Lib.getRndMInt :: "({VV##1398 : GHC.Types.Int | $VV##1398##k_ /= 0\n                             && $VV##1398##k_ > 0\n                             && $VV##1398##k_ >= 0\n                             && 0 < $VV##1398##k_\n                             && 2 <= $VV##1398##k_}, {VV##1400 : GHC.Types.Int | $VV##1400##k_ /= 0\n                                                                                 && $VV##1400##k_ > 0\n                                                                                 && $VV##1400##k_ >= 0\n                                                                                 && 0 < $VV##1400##k_\n                                                                                 && 2 <= $VV##1400##k_})<\\_ VV -> {VV##1403 : GHC.Types.Int | $VV##1403##k_ /= 0\n                                                                                                                                              && $VV##1403##k_ > 0\n                                                                                                                                              && $VV##1403##k_ >= 0\n                                                                                                                                              && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                                                                                                                                              && 0 < $VV##1403##k_\n                                                                                                                                              && 2 <= $VV##1403##k_}> -> (GHC.Types.IO GHC.Types.Int)"
77:21-77:60::$dStatefulGen_a7fc :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a7fc}"
77:31-77:37::lq_anf$##7205759403792821785 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7ed\n                                      && snd v == u##a7ee\n                                      && x_Tuple21 v == l##a7ed\n                                      && x_Tuple22 v == u##a7ee}"
77:32-77:33::l :: "{v : GHC.Types.Int | v == l##a7ed\n                     && $VV##1398##k_ /= 0\n                     && $VV##1398##k_ > 0\n                     && $VV##1398##k_ >= 0\n                     && 0 < $VV##1398##k_\n                     && 2 <= $VV##1398##k_}"
77:35-77:36::u :: "{v : GHC.Types.Int | v == u##a7ee\n                     && $VV##1400##k_ /= 0\n                     && $VV##1403##k_ /= 0\n                     && $VV##1400##k_ > 0\n                     && $VV##1403##k_ > 0\n                     && $VV##1400##k_ >= 0\n                     && $VV##1403##k_ >= 0\n                     && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                     && 0 < $VV##1400##k_\n                     && 0 < $VV##1403##k_\n                     && 2 <= $VV##1400##k_\n                     && 2 <= $VV##1403##k_}"
77:38-77:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"