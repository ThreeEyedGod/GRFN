1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
20:1-20:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
20:32-20:33::x :: "GHC.Types.Int"
20:36-20:37::x :: "{v : GHC.Types.Int | v == x}"
20:41-20:42::lq_anf$##7205759403792817810 :: "GHC.Types.Int"
20:45-20:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
20:52-20:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
20:59-20:73::lq_anf$##7205759403792817850 :: "Data.Text.Internal.Text"
20:64-20:73::lq_anf$##7205759403792817849 :: "[GHC.Types.Char]"
21:36-21:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
21:43-21:57::lq_anf$##7205759403792817847 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
21:49-21:57::lq_anf$##7205759403792817846 :: "(GHC.Types.Int, [GHC.Types.Int])"
21:50-21:51::lq_anf$##7205759403792817841 :: "GHC.Types.Int"
21:53-21:56::lq_anf$##7205759403792817845 :: "[GHC.Types.Int]"
21:54-21:55::lq_anf$##7205759403792817843 :: "GHC.Types.Int"
22:36-22:37::x :: "{v : GHC.Types.Int | v == x}"
22:41-22:42::lq_anf$##7205759403792817816 :: "GHC.Types.Int"
23:3-23:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                          && v > 0\n                                                          && v >= 0\n                                                          && 0 < v\n                                                          && 2 <= v})"
23:11-23:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                                        && v > 0\n                                                                        && v >= 0\n                                                                        && 0 < v\n                                                                        && 2 <= v}))"
23:16-23:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
23:30-23:49::lq_anf$##7205759403792817826 :: "(GHC.Types.IO GHC.Types.Int)"
23:42-23:48::lq_anf$##7205759403792817825 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x\n                                      && x_Tuple22 v == x}"
23:43-23:44::lq_anf$##7205759403792817824 :: "GHC.Types.Int"
23:46-23:47::x :: "{v : GHC.Types.Int | v == x}"
24:8-24:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                               && v > 0\n                                                               && v >= 0\n                                                               && 0 < v\n                                                               && 2 <= v}) | v == rndM}"
25:15-25:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
25:22-25:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
25:29-25:43::lq_anf$##7205759403792817830 :: "Data.Text.Internal.Text"
25:34-25:43::lq_anf$##7205759403792817829 :: "[GHC.Types.Char]"
26:20-26:87::ShortCircuit.$fShortcircuitBool :: "{v : (ShortCircuit.Shortcircuit GHC.Types.Bool) | v == $fShortcircuitBool}"
26:24-26:33::lq_anf$##7205759403792817836 :: "{v : GHC.Types.Bool | v <=> ps <= x}"
26:25-26:27::ps :: "{v : GHC.Types.Int | v == ps}"
26:31-26:32::x :: "{v : GHC.Types.Int | v == x}"
26:34-26:52::lq_anf$##7205759403792817838 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:35-26:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:42-26:51::lq_anf$##7205759403792817837 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
26:48-26:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp}"
26:53-26:87::lq_anf$##7205759403792817839 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:85-26:86::x :: "{v : GHC.Types.Int | v == x}"
28:9-28:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
28:14-28:16::ps :: "GHC.Types.Int"
28:18-28:20::sq :: "{VV : [GHC.Types.Int] | false}"
28:24-28:53::lq_anf$##7205759403792817834 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
28:25-28:35::lq_anf$##7205759403792817832 :: "GHC.Types.Int"
28:33-28:35::sq :: "{VV : [GHC.Types.Int] | false}"
28:37-28:52::lq_anf$##7205759403792817833 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
28:47-28:52::upper :: "{v : GHC.Types.Int | v == upper\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
29:36-29:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
29:43-29:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
29:50-29:64::lq_anf$##7205759403792817821 :: "Data.Text.Internal.Text"
29:55-29:64::lq_anf$##7205759403792817820 :: "[GHC.Types.Char]"
35:1-35:10::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
35:15-35:18::lq_anf$##7205759403792817806 :: "{v : [GHC.Types.Int] | len v == 0}"
35:16-35:17::lq_anf$##7205759403792817805 :: "GHC.Types.Int"
36:15-36:16::ds_d64T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
36:20-36:21::lq_anf$##7205759403792817794 :: "GHC.Types.Int"
36:29-36:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
36:51-36:65::lq_anf$##7205759403792817799 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
36:64-36:65::ds_d64T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
37:13-37:24::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
37:23-37:24::lq_anf$##7205759403792817803 :: "GHC.Types.Int"
38:16-38:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
38:28-38:31::okN :: "{v : GHC.Types.Int | v == okN\n                     && v >= 0\n                     && 0 < v}"
39:15-39:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
39:19-39:31::lq_anf$##7205759403792817798 :: "[GHC.Types.Char]"
43:1-43:12::Lib.lstPrimesLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
43:17-43:20::lq_anf$##7205759403792817776 :: "{v : [GHC.Types.Int] | len v == 0}"
43:18-43:19::lq_anf$##7205759403792817775 :: "GHC.Types.Int"
44:17-44:18::ds_d64D :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
44:22-44:23::lq_anf$##7205759403792817755 :: "GHC.Types.Int"
44:26-44:27::lq_anf$##7205759403792817761 :: "GHC.Types.Int"
44:30-44:67::lq_anf$##7205759403792817773 :: "{v : [{v : GHC.Types.Int | v /= 0\n                           && v > 0\n                           && v >= 0\n                           && 0 < v}] | len v >= 0}"
44:31-44:32::ds_d64K :: "GHC.Types.Int"
44:40-44:48::lq_anf$##7205759403792817772 :: "[GHC.Types.Int]"
44:41-44:42::lq_anf$##7205759403792817771 :: "GHC.Types.Int"
44:46-44:47::ds_d64D :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
44:50-44:51::ds_d64K :: "GHC.Types.Int"
44:54-44:55::lq_anf$##7205759403792817764 :: "GHC.Types.Int"
44:57-44:66::lq_anf$##7205759403792817767 :: "GHC.Types.Bool"
44:65-44:66::ds_d64K :: "GHC.Types.Int"
45:17-45:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
45:21-45:33::lq_anf$##7205759403792817759 :: "[GHC.Types.Char]"
52:1-52:13::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
52:18-52:19::lq_anf$##7205759403792817790 :: "{v : GHC.Prim.Int# | v == 1}"
53:18-53:27::lq_anf$##7205759403792817779 :: "GHC.Types.Bool"
53:26-53:27::ds_d62Y :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
53:30-53:31::ds_d62Y :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
54:18-54:19::ds_d62Y :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
54:22-54:23::lq_anf$##7205759403792817782 :: "GHC.Types.Int"
54:26-54:46::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
54:39-54:46::lq_anf$##7205759403792817789 :: "GHC.Types.Int"
54:40-54:41::ds_d62Y :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
54:44-54:45::lq_anf$##7205759403792817788 :: "GHC.Types.Int"
55:18-55:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
55:22-55:34::lq_anf$##7205759403792817786 :: "[GHC.Types.Char]"
60:1-60:11::Lib.getRndMInt :: "({VV : GHC.Types.Int | VV /= 0\n                       && VV > 0\n                       && VV >= 0\n                       && 0 < VV\n                       && 2 <= VV}, {VV : GHC.Types.Int | VV /= 0\n                                                          && VV > 0\n                                                          && VV >= 0\n                                                          && 0 < VV\n                                                          && 2 <= VV})<\\x1 VV -> {VV : GHC.Types.Int | VV /= 0\n                                                                                                       && VV > 0\n                                                                                                       && VV >= 0\n                                                                                                       && VV >= x1\n                                                                                                       && 0 < VV\n                                                                                                       && 2 <= VV}> -> (GHC.Types.IO GHC.Types.Int)"
60:21-60:60::$dStatefulGen_a3yI :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a3yI}"
60:31-60:37::lq_anf$##7205759403792817808 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l\n                                      && snd v == u\n                                      && x_Tuple21 v == l\n                                      && x_Tuple22 v == u}"
60:32-60:33::l :: "{v : GHC.Types.Int | v == l\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
60:35-60:36::u :: "{v : GHC.Types.Int | v == u\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && v >= l\n                     && 0 < v\n                     && 2 <= v}"
60:38-60:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"