1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
26:1-26:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:32-26:33::x :: "GHC.Types.Int"
26:36-26:37::x :: "{v : GHC.Types.Int | v == x##a7jS}"
26:41-26:42::lq_anf$##7205759403792822575 :: "GHC.Types.Int"
26:45-26:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:52-26:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
26:59-26:73::lq_anf$##7205759403792822615 :: "Data.Text.Internal.Text"
26:64-26:73::lq_anf$##7205759403792822614 :: "[GHC.Types.Char]"
27:36-27:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:43-27:57::lq_anf$##7205759403792822612 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
27:49-27:57::lq_anf$##7205759403792822611 :: "(GHC.Types.Int, [GHC.Types.Int])"
27:50-27:51::lq_anf$##7205759403792822606 :: "GHC.Types.Int"
27:53-27:56::lq_anf$##7205759403792822610 :: "[GHC.Types.Int]"
27:54-27:55::lq_anf$##7205759403792822608 :: "GHC.Types.Int"
28:36-28:37::x :: "{v : GHC.Types.Int | v == x##a7jS}"
28:41-28:42::lq_anf$##7205759403792822581 :: "GHC.Types.Int"
29:3-29:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##3231##k_ /= 0\n                                                          && $VV##3231##k_ /= $lq_anf$##7205759403792822574##d7xk##k_\n                                                          && $VV##3231##k_ /= $lq_anf$##7205759403792822575##d7xl##k_\n                                                          && $VV##3231##k_ > 0\n                                                          && $VV##3231##k_ > $lq_anf$##7205759403792822574##d7xk##k_\n                                                          && $VV##3231##k_ > $lq_anf$##7205759403792822575##d7xl##k_\n                                                          && $VV##3231##k_ >= 0\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822574##d7xk##k_\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822575##d7xl##k_\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822580##d7xq##k_\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822581##d7xr##k_\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822588##d7xy##k_\n                                                          && $VV##3231##k_ >= $lq_anf$##7205759403792822589##d7xz##k_\n                                                          && 0 < $VV##3231##k_\n                                                          && 2 <= $VV##3231##k_})"
29:11-29:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##3231##k_ /= 0\n                                                                        && $VV##3231##k_ /= $lq_anf$##7205759403792822574##d7xk##k_\n                                                                        && $VV##3231##k_ /= $lq_anf$##7205759403792822575##d7xl##k_\n                                                                        && $VV##3231##k_ > 0\n                                                                        && $VV##3231##k_ > $lq_anf$##7205759403792822574##d7xk##k_\n                                                                        && $VV##3231##k_ > $lq_anf$##7205759403792822575##d7xl##k_\n                                                                        && $VV##3231##k_ >= 0\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822574##d7xk##k_\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822575##d7xl##k_\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822580##d7xq##k_\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822581##d7xr##k_\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822588##d7xy##k_\n                                                                        && $VV##3231##k_ >= $lq_anf$##7205759403792822589##d7xz##k_\n                                                                        && 0 < $VV##3231##k_\n                                                                        && 2 <= $VV##3231##k_}))"
29:16-29:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
29:30-29:49::lq_anf$##7205759403792822591 :: "(GHC.Types.IO GHC.Types.Int)"
29:42-29:48::lq_anf$##7205759403792822590 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7jS\n                                      && x_Tuple22 v == x##a7jS}"
29:43-29:44::lq_anf$##7205759403792822589 :: "GHC.Types.Int"
29:46-29:47::x :: "{v : GHC.Types.Int | v == x##a7jS}"
30:8-30:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##3231##k_ /= 0\n                                                               && $VV##3231##k_ /= $lq_anf$##7205759403792822574##d7xk##k_\n                                                               && $VV##3231##k_ /= $lq_anf$##7205759403792822575##d7xl##k_\n                                                               && $VV##3231##k_ > 0\n                                                               && $VV##3231##k_ > $lq_anf$##7205759403792822574##d7xk##k_\n                                                               && $VV##3231##k_ > $lq_anf$##7205759403792822575##d7xl##k_\n                                                               && $VV##3231##k_ >= 0\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822574##d7xk##k_\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822575##d7xl##k_\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822580##d7xq##k_\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822581##d7xr##k_\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822588##d7xy##k_\n                                                               && $VV##3231##k_ >= $lq_anf$##7205759403792822589##d7xz##k_\n                                                               && 0 < $VV##3231##k_\n                                                               && 2 <= $VV##3231##k_}) | v == rndM##a7jU}"
31:15-31:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:22-31:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
31:29-31:43::lq_anf$##7205759403792822595 :: "Data.Text.Internal.Text"
31:34-31:43::lq_anf$##7205759403792822594 :: "[GHC.Types.Char]"
32:20-32:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
32:24-32:33::lq_anf$##7205759403792822601 :: "{v : GHC.Types.Bool | v <=> ps##a7po <= x##a7jS}"
32:25-32:27::ps :: "{v : GHC.Types.Int | v == ps##a7po}"
32:31-32:32::x :: "{v : GHC.Types.Int | v == x##a7jS}"
32:34-32:52::lq_anf$##7205759403792822603 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:35-32:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:42-32:51::lq_anf$##7205759403792822602 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
32:48-32:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7pl}"
32:53-32:87::lq_anf$##7205759403792822604 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:85-32:86::x :: "{v : GHC.Types.Int | v == x##a7jS}"
34:9-34:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
34:14-34:16::ps :: "GHC.Types.Int"
34:18-34:20::sq :: "{VV##3470 : [GHC.Types.Int] | false}"
34:24-34:54::lq_anf$##7205759403792822599 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
34:25-34:35::lq_anf$##7205759403792822597 :: "GHC.Types.Int"
34:33-34:35::sq :: "{VV##3470 : [GHC.Types.Int] | false}"
34:37-34:53::lq_anf$##7205759403792822598 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
34:48-34:53::upper :: "{v : GHC.Types.Int | v == upper##a7jV\n                     && $VV##3231##k_ /= 0\n                     && $VV##3231##k_ /= $lq_anf$##7205759403792822574##d7xk##k_\n                     && $VV##3231##k_ /= $lq_anf$##7205759403792822575##d7xl##k_\n                     && $VV##3231##k_ > 0\n                     && $VV##3231##k_ > $lq_anf$##7205759403792822574##d7xk##k_\n                     && $VV##3231##k_ > $lq_anf$##7205759403792822575##d7xl##k_\n                     && $VV##3231##k_ >= 0\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822574##d7xk##k_\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822575##d7xl##k_\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822580##d7xq##k_\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822581##d7xr##k_\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822588##d7xy##k_\n                     && $VV##3231##k_ >= $lq_anf$##7205759403792822589##d7xz##k_\n                     && 0 < $VV##3231##k_\n                     && 2 <= $VV##3231##k_}"
35:36-35:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
35:43-35:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
35:50-35:64::lq_anf$##7205759403792822586 :: "Data.Text.Internal.Text"
35:55-35:64::lq_anf$##7205759403792822585 :: "[GHC.Types.Char]"
45:1-45:11::Lib.createSeq' :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
45:16-45:19::lq_anf$##7205759403792822571 :: "{v : [GHC.Types.Int] | len v == 0}"
45:17-45:18::lq_anf$##7205759403792822570 :: "GHC.Types.Int"
46:16-46:17::ds_d7tl :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
46:21-46:22::lq_anf$##7205759403792822550 :: "GHC.Types.Int"
46:25-46:26::lq_anf$##7205759403792822556 :: "GHC.Types.Int"
46:29-46:70::lq_anf$##7205759403792822568 :: "{v : [{v : GHC.Types.Int | $VV##2423##k_ /= 0\n                           && $VV##2423##k_ > 0\n                           && $VV##2423##k_ >= 0\n                           && $VV##2423##k_ >= $lq_anf$##7205759403792822555##d7x1##k_\n                           && $VV##2423##k_ >= $lq_anf$##7205759403792822556##d7x2##k_\n                           && 0 < $VV##2423##k_}] | len $VV##2428##k_ >= 0\n                                                    && len $VV##2428##k_ <= len $ds_d7tr##k_}"
46:30-46:31::ds_d7ts :: "GHC.Types.Int"
46:39-46:62::lq_anf$##7205759403792822567 :: "[GHC.Types.Int]"
46:46-46:53::lq_anf$##7205759403792822563 :: "GHC.Types.Int -> GHC.Types.Bool"
46:54-46:62::lq_anf$##7205759403792822566 :: "[GHC.Types.Int]"
46:55-46:56::lq_anf$##7205759403792822565 :: "GHC.Types.Int"
46:60-46:61::ds_d7tl :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
46:64-46:65::ds_d7ts :: "GHC.Types.Int"
46:68-46:69::lq_anf$##7205759403792822559 :: "GHC.Types.Int"
47:16-47:32::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
47:20-47:32::lq_anf$##7205759403792822554 :: "[GHC.Types.Char]"
54:1-54:11::Lib.getRndMInt :: "({VV##2804 : GHC.Types.Int | $VV##2804##k_ /= 0\n                             && $VV##2804##k_ > 0\n                             && $VV##2804##k_ >= 0\n                             && 0 < $VV##2804##k_\n                             && 2 <= $VV##2804##k_}, {VV##2806 : GHC.Types.Int | $VV##2806##k_ /= 0\n                                                                                 && $VV##2806##k_ > 0\n                                                                                 && $VV##2806##k_ >= 0\n                                                                                 && 0 < $VV##2806##k_\n                                                                                 && 2 <= $VV##2806##k_})<\\_ VV -> {VV##2809 : GHC.Types.Int | $VV##2809##k_ /= 0\n                                                                                                                                              && $VV##2809##k_ > 0\n                                                                                                                                              && $VV##2809##k_ >= 0\n                                                                                                                                              && $VV##2809##k_ >= $lq_tmp$x##2808##k_\n                                                                                                                                              && 0 < $VV##2809##k_\n                                                                                                                                              && 2 <= $VV##2809##k_}> -> (GHC.Types.IO GHC.Types.Int)"
54:21-54:60::$dStatefulGen_a7nS :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a7nS}"
54:31-54:37::lq_anf$##7205759403792822573 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7k1\n                                      && snd v == u##a7k2\n                                      && x_Tuple21 v == l##a7k1\n                                      && x_Tuple22 v == u##a7k2}"
54:32-54:33::l :: "{v : GHC.Types.Int | v == l##a7k1\n                     && $VV##2804##k_ /= 0\n                     && $VV##2804##k_ > 0\n                     && $VV##2804##k_ >= 0\n                     && 0 < $VV##2804##k_\n                     && 2 <= $VV##2804##k_}"
54:35-54:36::u :: "{v : GHC.Types.Int | v == u##a7k2\n                     && $VV##2806##k_ /= 0\n                     && $VV##2809##k_ /= 0\n                     && $VV##2806##k_ > 0\n                     && $VV##2809##k_ > 0\n                     && $VV##2806##k_ >= 0\n                     && $VV##2809##k_ >= 0\n                     && $VV##2809##k_ >= $lq_tmp$x##2808##k_\n                     && 0 < $VV##2806##k_\n                     && 0 < $VV##2809##k_\n                     && 2 <= $VV##2806##k_\n                     && 2 <= $VV##2809##k_}"
54:38-54:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"
61:1-61:10::Lib.mapTuples :: "forall a .\n(GHC.Show.Show<[]> a) =>\n(a -> a -> a) -> [(a, a)] -> [a]"
61:11-61:12::f :: "a -> a -> a"
61:13-61:15::ts :: "[(a, a)]"
61:22-61:47::f :: "a -> a -> a"
61:24-61:25::t :: "(a, a)"
61:31-61:38::lq_anf$##7205759403792822484 :: "{VV : a | VV == fst t##a7k5}"
61:36-61:37::t :: "{v : (a, a) | v == t##a7k5}"
61:39-61:46::lq_anf$##7205759403792822485 :: "{VV : a | VV == snd t##a7k5}"
61:44-61:45::t :: "{v : (a, a) | v == t##a7k5}"
61:48-61:50::ts :: "{v : [(a, a)] | v == ts##a7k4\n                && len v >= 0}"
64:1-64:16::Lib.reduceTupleList :: "Lib.TupleList -> Lib.IntStr"
64:17-64:19::ts :: "Lib.TupleList"
64:27-64:29::_ :: "{v : Lib.TupleList | v == ts##a7k6}"
65:17-65:55::Lib.Str :: "[GHC.Types.Char] -> Lib.IntStr"
65:21-65:55::lq_anf$##7205759403792822688 :: "[GHC.Types.Char]"
65:28-65:32::_ :: "{VV : forall a .\n      x1:[a] -> x2:[a] -> {v : [a] | len v == len x1 + len x2} | VV == ++}"
65:33-65:35::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
65:36-65:54::lq_anf$##7205759403792822687 :: "[[GHC.Types.Char]]"
65:47-65:51::_ :: "{VV : forall a .\n      x1:[a] -> x2:[a] -> {v : [a] | len v == len x1 + len x2} | VV == ++}"
65:52-65:53::s :: "{v : [([GHC.Types.Char], [GHC.Types.Char])] | v == s##a7k7\n                                              && len v >= 0}"
66:17-66:52::Lib.Int :: "GHC.Num.Integer.Integer -> Lib.IntStr"
66:21-66:52::lq_anf$##7205759403792822694 :: "GHC.Num.Integer.Integer"
66:28-66:31::lq_anf$##7205759403792822689 :: "x1:GHC.Num.Integer.Integer -> x2:GHC.Num.Integer.Integer -> {v : GHC.Num.Integer.Integer | v == x1 + x2}"
66:32-66:33::lq_anf$##7205759403792822691 :: "GHC.Num.Integer.Integer"
66:34-66:51::lq_anf$##7205759403792822693 :: "[GHC.Num.Integer.Integer]"
66:45-66:48::lq_anf$##7205759403792822692 :: "x1:GHC.Num.Integer.Integer -> x2:GHC.Num.Integer.Integer -> {v : GHC.Num.Integer.Integer | v == x1 - x2}"
66:49-66:50::i :: "{v : [(GHC.Num.Integer.Integer, GHC.Num.Integer.Integer)] | v == i##a7k8\n                                                            && len v >= 0}"
67:8-67:20::Lib.NotSupported :: "{v : Lib.IntStr | v == NotSupported}"