1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
28:1-28:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:32-28:33::x :: "GHC.Types.Int"
28:36-28:37::x :: "{v : GHC.Types.Int | v == x##a7eu}"
28:41-28:42::lq_anf$##7205759403792821901 :: "GHC.Types.Int"
28:45-28:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:52-28:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
28:59-28:73::lq_anf$##7205759403792821941 :: "Data.Text.Internal.Text"
28:64-28:73::lq_anf$##7205759403792821940 :: "[GHC.Types.Char]"
29:36-29:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
29:43-29:57::lq_anf$##7205759403792821938 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
29:49-29:57::lq_anf$##7205759403792821937 :: "(GHC.Types.Int, [GHC.Types.Int])"
29:50-29:51::lq_anf$##7205759403792821932 :: "GHC.Types.Int"
29:53-29:56::lq_anf$##7205759403792821936 :: "[GHC.Types.Int]"
29:54-29:55::lq_anf$##7205759403792821934 :: "GHC.Types.Int"
30:36-30:37::x :: "{v : GHC.Types.Int | v == x##a7eu}"
30:41-30:42::lq_anf$##7205759403792821907 :: "GHC.Types.Int"
31:3-31:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##2425##k_ /= 0\n                                                          && $VV##2425##k_ /= $lq_anf$##7205759403792821900##d7ms##k_\n                                                          && $VV##2425##k_ /= $lq_anf$##7205759403792821901##d7mt##k_\n                                                          && $VV##2425##k_ > 0\n                                                          && $VV##2425##k_ > $lq_anf$##7205759403792821900##d7ms##k_\n                                                          && $VV##2425##k_ > $lq_anf$##7205759403792821901##d7mt##k_\n                                                          && $VV##2425##k_ >= 0\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821900##d7ms##k_\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821901##d7mt##k_\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821906##d7my##k_\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821907##d7mz##k_\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821914##d7mG##k_\n                                                          && $VV##2425##k_ >= $lq_anf$##7205759403792821915##d7mH##k_\n                                                          && 0 < $VV##2425##k_\n                                                          && 2 <= $VV##2425##k_})"
31:11-31:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##2425##k_ /= 0\n                                                                        && $VV##2425##k_ /= $lq_anf$##7205759403792821900##d7ms##k_\n                                                                        && $VV##2425##k_ /= $lq_anf$##7205759403792821901##d7mt##k_\n                                                                        && $VV##2425##k_ > 0\n                                                                        && $VV##2425##k_ > $lq_anf$##7205759403792821900##d7ms##k_\n                                                                        && $VV##2425##k_ > $lq_anf$##7205759403792821901##d7mt##k_\n                                                                        && $VV##2425##k_ >= 0\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821900##d7ms##k_\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821901##d7mt##k_\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821906##d7my##k_\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821907##d7mz##k_\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821914##d7mG##k_\n                                                                        && $VV##2425##k_ >= $lq_anf$##7205759403792821915##d7mH##k_\n                                                                        && 0 < $VV##2425##k_\n                                                                        && 2 <= $VV##2425##k_}))"
31:16-31:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
31:30-31:49::lq_anf$##7205759403792821917 :: "(GHC.Types.IO GHC.Types.Int)"
31:42-31:48::lq_anf$##7205759403792821916 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7eu\n                                      && x_Tuple22 v == x##a7eu}"
31:43-31:44::lq_anf$##7205759403792821915 :: "GHC.Types.Int"
31:46-31:47::x :: "{v : GHC.Types.Int | v == x##a7eu}"
32:8-32:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##2425##k_ /= 0\n                                                               && $VV##2425##k_ /= $lq_anf$##7205759403792821900##d7ms##k_\n                                                               && $VV##2425##k_ /= $lq_anf$##7205759403792821901##d7mt##k_\n                                                               && $VV##2425##k_ > 0\n                                                               && $VV##2425##k_ > $lq_anf$##7205759403792821900##d7ms##k_\n                                                               && $VV##2425##k_ > $lq_anf$##7205759403792821901##d7mt##k_\n                                                               && $VV##2425##k_ >= 0\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821900##d7ms##k_\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821901##d7mt##k_\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821906##d7my##k_\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821907##d7mz##k_\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821914##d7mG##k_\n                                                               && $VV##2425##k_ >= $lq_anf$##7205759403792821915##d7mH##k_\n                                                               && 0 < $VV##2425##k_\n                                                               && 2 <= $VV##2425##k_}) | v == rndM##a7ew}"
33:15-33:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
33:22-33:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
33:29-33:43::lq_anf$##7205759403792821921 :: "Data.Text.Internal.Text"
33:34-33:43::lq_anf$##7205759403792821920 :: "[GHC.Types.Char]"
34:20-34:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
34:24-34:33::lq_anf$##7205759403792821927 :: "{v : GHC.Types.Bool | v <=> ps##a7im <= x##a7eu}"
34:25-34:27::ps :: "{v : GHC.Types.Int | v == ps##a7im}"
34:31-34:32::x :: "{v : GHC.Types.Int | v == x##a7eu}"
34:34-34:52::lq_anf$##7205759403792821929 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
34:35-34:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
34:42-34:51::lq_anf$##7205759403792821928 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
34:48-34:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7ij}"
34:53-34:87::lq_anf$##7205759403792821930 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
34:85-34:86::x :: "{v : GHC.Types.Int | v == x##a7eu}"
36:9-36:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
36:14-36:16::ps :: "GHC.Types.Int"
36:18-36:20::sq :: "{VV##2664 : [GHC.Types.Int] | false}"
36:24-36:54::lq_anf$##7205759403792821925 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
36:25-36:35::lq_anf$##7205759403792821923 :: "GHC.Types.Int"
36:33-36:35::sq :: "{VV##2664 : [GHC.Types.Int] | false}"
36:37-36:53::lq_anf$##7205759403792821924 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
36:48-36:53::upper :: "{v : GHC.Types.Int | v == upper##a7ex\n                     && $VV##2425##k_ /= 0\n                     && $VV##2425##k_ /= $lq_anf$##7205759403792821900##d7ms##k_\n                     && $VV##2425##k_ /= $lq_anf$##7205759403792821901##d7mt##k_\n                     && $VV##2425##k_ > 0\n                     && $VV##2425##k_ > $lq_anf$##7205759403792821900##d7ms##k_\n                     && $VV##2425##k_ > $lq_anf$##7205759403792821901##d7mt##k_\n                     && $VV##2425##k_ >= 0\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821900##d7ms##k_\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821901##d7mt##k_\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821906##d7my##k_\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821907##d7mz##k_\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821914##d7mG##k_\n                     && $VV##2425##k_ >= $lq_anf$##7205759403792821915##d7mH##k_\n                     && 0 < $VV##2425##k_\n                     && 2 <= $VV##2425##k_}"
37:36-37:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
37:43-37:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
37:50-37:64::lq_anf$##7205759403792821912 :: "Data.Text.Internal.Text"
37:55-37:64::lq_anf$##7205759403792821911 :: "[GHC.Types.Char]"
47:1-47:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
47:15-47:18::lq_anf$##7205759403792821897 :: "{v : [GHC.Types.Int] | len v == 0}"
47:16-47:17::lq_anf$##7205759403792821896 :: "GHC.Types.Int"
48:15-48:16::ds_d7k2 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:20-48:21::lq_anf$##7205759403792821885 :: "GHC.Types.Int"
48:29-48:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
48:51-48:65::lq_anf$##7205759403792821890 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:64-48:65::ds_d7k2 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
49:13-49:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
49:23-49:24::lq_anf$##7205759403792821894 :: "GHC.Types.Int"
50:16-50:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
50:28-50:31::okN :: "{v : GHC.Types.Int | v == okN##a7eC\n                     && v >= 0\n                     && 0 < v}"
51:15-51:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
51:19-51:31::lq_anf$##7205759403792821889 :: "[GHC.Types.Char]"
63:1-63:11::Lib.createSeq' :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
63:16-63:19::lq_anf$##7205759403792821867 :: "{v : [GHC.Types.Int] | len v == 0}"
63:17-63:18::lq_anf$##7205759403792821866 :: "GHC.Types.Int"
64:16-64:17::ds_d7jM :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
64:21-64:22::lq_anf$##7205759403792821846 :: "GHC.Types.Int"
64:25-64:26::lq_anf$##7205759403792821852 :: "GHC.Types.Int"
64:29-64:71::lq_anf$##7205759403792821864 :: "{v : [{v : GHC.Types.Int | $VV##1220##k_ /= 0\n                           && $VV##1220##k_ > 0\n                           && $VV##1220##k_ >= 0\n                           && $VV##1220##k_ >= $lq_anf$##7205759403792821851##d7lF##k_\n                           && $VV##1220##k_ >= $lq_anf$##7205759403792821852##d7lG##k_\n                           && 0 < $VV##1220##k_}] | len $VV##1225##k_ >= 0\n                                                    && len $VV##1225##k_ <= len $ds_d7jS##k_}"
64:30-64:31::ds_d7jT :: "GHC.Types.Int"
64:39-64:62::lq_anf$##7205759403792821863 :: "[GHC.Types.Int]"
64:46-64:53::lq_anf$##7205759403792821859 :: "GHC.Types.Int -> GHC.Types.Bool"
64:54-64:62::lq_anf$##7205759403792821862 :: "[GHC.Types.Int]"
64:55-64:56::lq_anf$##7205759403792821861 :: "GHC.Types.Int"
64:60-64:61::ds_d7jM :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
64:64-64:65::ds_d7jT :: "GHC.Types.Int"
64:68-64:69::lq_anf$##7205759403792821855 :: "GHC.Types.Int"
65:16-65:32::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
65:20-65:32::lq_anf$##7205759403792821850 :: "[GHC.Types.Char]"
76:1-76:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
76:17-76:20::lq_anf$##7205759403792821842 :: "{v : [GHC.Types.Int] | len v == 0}"
76:18-76:19::lq_anf$##7205759403792821841 :: "GHC.Types.Int"
77:17-77:18::ds_d7jw :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
77:22-77:23::lq_anf$##7205759403792821821 :: "GHC.Types.Int"
77:26-77:27::lq_anf$##7205759403792821827 :: "GHC.Types.Int"
77:30-77:67::lq_anf$##7205759403792821839 :: "{v : [{v : GHC.Types.Int | $VV##748##k_ /= 0\n                           && $VV##748##k_ > 0\n                           && $VV##748##k_ >= 0\n                           && $VV##748##k_ >= $lq_anf$##7205759403792821826##d7lg##k_\n                           && $VV##748##k_ >= $lq_anf$##7205759403792821827##d7lh##k_\n                           && 0 < $VV##748##k_}] | len $VV##753##k_ >= 0\n                                                   && len $VV##753##k_ <= len $ds_d7jC##k_}"
77:31-77:32::ds_d7jD :: "GHC.Types.Int"
77:40-77:48::lq_anf$##7205759403792821838 :: "[GHC.Types.Int]"
77:41-77:42::lq_anf$##7205759403792821837 :: "GHC.Types.Int"
77:46-77:47::ds_d7jw :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
77:50-77:51::ds_d7jD :: "GHC.Types.Int"
77:54-77:55::lq_anf$##7205759403792821830 :: "GHC.Types.Int"
77:57-77:66::lq_anf$##7205759403792821833 :: "GHC.Types.Bool"
77:65-77:66::ds_d7jD :: "GHC.Types.Int"
78:17-78:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
78:21-78:33::lq_anf$##7205759403792821825 :: "[GHC.Types.Char]"
90:1-90:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
90:18-90:19::lq_anf$##7205759403792821881 :: "{v : GHC.Prim.Int# | v == 1}"
91:18-91:27::lq_anf$##7205759403792821870 :: "GHC.Types.Bool"
91:26-91:27::ds_d7ji :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
91:30-91:31::ds_d7ji :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
92:18-92:19::ds_d7ji :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
92:22-92:23::lq_anf$##7205759403792821873 :: "GHC.Types.Int"
92:26-92:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
92:39-92:46::lq_anf$##7205759403792821880 :: "GHC.Types.Int"
92:40-92:41::ds_d7ji :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
92:44-92:45::lq_anf$##7205759403792821879 :: "GHC.Types.Int"
93:18-93:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
93:22-93:34::lq_anf$##7205759403792821877 :: "[GHC.Types.Char]"
100:1-100:11::Lib.getRndMInt :: "({VV##1998 : GHC.Types.Int | $VV##1998##k_ /= 0\n                             && $VV##1998##k_ > 0\n                             && $VV##1998##k_ >= 0\n                             && 0 < $VV##1998##k_\n                             && 2 <= $VV##1998##k_}, {VV##2000 : GHC.Types.Int | $VV##2000##k_ /= 0\n                                                                                 && $VV##2000##k_ > 0\n                                                                                 && $VV##2000##k_ >= 0\n                                                                                 && 0 < $VV##2000##k_\n                                                                                 && 2 <= $VV##2000##k_})<\\_ VV -> {VV##2003 : GHC.Types.Int | $VV##2003##k_ /= 0\n                                                                                                                                              && $VV##2003##k_ > 0\n                                                                                                                                              && $VV##2003##k_ >= 0\n                                                                                                                                              && $VV##2003##k_ >= $lq_tmp$x##2002##k_\n                                                                                                                                              && 0 < $VV##2003##k_\n                                                                                                                                              && 2 <= $VV##2003##k_}> -> (GHC.Types.IO GHC.Types.Int)"
100:21-100:60::$dStatefulGen_a7fR :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a7fR}"
100:31-100:37::lq_anf$##7205759403792821899 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7eJ\n                                      && snd v == u##a7eK\n                                      && x_Tuple21 v == l##a7eJ\n                                      && x_Tuple22 v == u##a7eK}"
100:32-100:33::l :: "{v : GHC.Types.Int | v == l##a7eJ\n                     && $VV##1998##k_ /= 0\n                     && $VV##1998##k_ > 0\n                     && $VV##1998##k_ >= 0\n                     && 0 < $VV##1998##k_\n                     && 2 <= $VV##1998##k_}"
100:35-100:36::u :: "{v : GHC.Types.Int | v == u##a7eK\n                     && $VV##2000##k_ /= 0\n                     && $VV##2003##k_ /= 0\n                     && $VV##2000##k_ > 0\n                     && $VV##2003##k_ > 0\n                     && $VV##2000##k_ >= 0\n                     && $VV##2003##k_ >= 0\n                     && $VV##2003##k_ >= $lq_tmp$x##2002##k_\n                     && 0 < $VV##2000##k_\n                     && 0 < $VV##2003##k_\n                     && 2 <= $VV##2000##k_\n                     && 2 <= $VV##2003##k_}"
100:38-100:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"