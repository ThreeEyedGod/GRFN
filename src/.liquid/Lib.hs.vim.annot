1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
21:1-21:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
21:32-21:33::x :: "GHC.Types.Int"
21:36-21:37::x :: "{v : GHC.Types.Int | v == x}"
21:41-21:42::lq_anf$##7205759403792817743 :: "GHC.Types.Int"
21:45-21:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
21:52-21:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
21:59-21:73::lq_anf$##7205759403792817783 :: "Data.Text.Internal.Text"
21:64-21:73::lq_anf$##7205759403792817782 :: "[GHC.Types.Char]"
22:36-22:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
22:43-22:57::lq_anf$##7205759403792817780 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
22:49-22:57::lq_anf$##7205759403792817779 :: "(GHC.Types.Int, [GHC.Types.Int])"
22:50-22:51::lq_anf$##7205759403792817774 :: "GHC.Types.Int"
22:53-22:56::lq_anf$##7205759403792817778 :: "[GHC.Types.Int]"
22:54-22:55::lq_anf$##7205759403792817776 :: "GHC.Types.Int"
23:36-23:37::x :: "{v : GHC.Types.Int | v == x}"
23:41-23:42::lq_anf$##7205759403792817749 :: "GHC.Types.Int"
24:3-24:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                          && v > 0\n                                                          && v >= 0\n                                                          && 0 < v\n                                                          && 2 <= v})"
24:11-24:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                                        && v > 0\n                                                                        && v >= 0\n                                                                        && 0 < v\n                                                                        && 2 <= v}))"
24:16-24:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
24:30-24:49::lq_anf$##7205759403792817759 :: "(GHC.Types.IO GHC.Types.Int)"
24:42-24:48::lq_anf$##7205759403792817758 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x\n                                      && x_Tuple22 v == x}"
24:43-24:44::lq_anf$##7205759403792817757 :: "GHC.Types.Int"
24:46-24:47::x :: "{v : GHC.Types.Int | v == x}"
25:8-25:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                               && v > 0\n                                                               && v >= 0\n                                                               && 0 < v\n                                                               && 2 <= v}) | v == rndM}"
26:15-26:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
26:22-26:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
26:29-26:43::lq_anf$##7205759403792817763 :: "Data.Text.Internal.Text"
26:34-26:43::lq_anf$##7205759403792817762 :: "[GHC.Types.Char]"
27:20-27:87::ShortCircuit.$fShortcircuitBool :: "{v : (ShortCircuit.Shortcircuit GHC.Types.Bool) | v == $fShortcircuitBool}"
27:24-27:33::lq_anf$##7205759403792817769 :: "{v : GHC.Types.Bool | v <=> ps <= x}"
27:25-27:27::ps :: "{v : GHC.Types.Int | v == ps}"
27:31-27:32::x :: "{v : GHC.Types.Int | v == x}"
27:34-27:52::lq_anf$##7205759403792817771 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:35-27:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:42-27:51::lq_anf$##7205759403792817770 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
27:48-27:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp}"
27:53-27:87::lq_anf$##7205759403792817772 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:85-27:86::x :: "{v : GHC.Types.Int | v == x}"
29:9-29:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
29:14-29:16::ps :: "GHC.Types.Int"
29:18-29:20::sq :: "{VV : [GHC.Types.Int] | false}"
29:24-29:53::lq_anf$##7205759403792817767 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
29:25-29:35::lq_anf$##7205759403792817765 :: "GHC.Types.Int"
29:33-29:35::sq :: "{VV : [GHC.Types.Int] | false}"
29:37-29:52::lq_anf$##7205759403792817766 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
29:47-29:52::upper :: "{v : GHC.Types.Int | v == upper\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
30:36-30:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
30:43-30:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
30:50-30:64::lq_anf$##7205759403792817754 :: "Data.Text.Internal.Text"
30:55-30:64::lq_anf$##7205759403792817753 :: "[GHC.Types.Char]"
36:1-36:10::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
36:15-36:18::lq_anf$##7205759403792817739 :: "{v : [GHC.Types.Int] | len v == 0}"
36:16-36:17::lq_anf$##7205759403792817738 :: "GHC.Types.Int"
37:15-37:16::ds_d63T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
37:20-37:21::lq_anf$##7205759403792817720 :: "GHC.Types.Int"
37:29-37:50::lq_anf$##7205759403792817725 :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                          && 0 < v})"
37:49-37:50::ds_d63T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
38:13-38:24::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
38:23-38:24::lq_anf$##7205759403792817728 :: "GHC.Types.Int"
40:10-40:38::lq_anf$##7205759403792817732 :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                          && 0 < v})"
40:30-40:38::lq_anf$##7205759403792817731 :: "GHC.Types.Int"
40:31-40:33::si :: "{v : GHC.Types.Int | v == si\n                     && v >= 0\n                     && 0 < v}"
40:36-40:37::lq_anf$##7205759403792817730 :: "GHC.Types.Int"
41:17-41:28::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
41:27-41:28::lq_anf$##7205759403792817735 :: "GHC.Types.Int"
42:20-42:22::si :: "{v : GHC.Types.Int | v == si\n                     && v >= 0\n                     && 0 < v}"
42:25-42:38::lq_anf$##7205759403792817736 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
42:35-42:38::okN :: "{v : GHC.Types.Int | v == okN\n                     && v >= 0\n                     && 0 < v}"
44:7-44:9::si :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
44:12-44:30::_ :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
44:25-44:30::nGte1 :: "{v : GHC.Types.Int | v == nGte1\n                     && v >= 0\n                     && 0 < v}"
45:15-45:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
45:19-45:31::lq_anf$##7205759403792817724 :: "[GHC.Types.Char]"
50:1-50:13::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
50:18-50:19::lq_anf$##7205759403792817716 :: "{v : GHC.Prim.Int# | v == 1}"
51:18-51:27::lq_anf$##7205759403792817705 :: "GHC.Types.Bool"
51:26-51:27::ds_d62e :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
51:30-51:31::ds_d62e :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
52:18-52:19::ds_d62e :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
52:22-52:23::lq_anf$##7205759403792817708 :: "GHC.Types.Int"
52:26-52:46::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
52:39-52:46::lq_anf$##7205759403792817715 :: "GHC.Types.Int"
52:40-52:41::ds_d62e :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
52:44-52:45::lq_anf$##7205759403792817714 :: "GHC.Types.Int"
53:18-53:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
53:22-53:34::lq_anf$##7205759403792817712 :: "[GHC.Types.Char]"
58:1-58:11::Lib.getRndMInt :: "({VV : GHC.Types.Int | VV /= 0\n                       && VV > 0\n                       && VV >= 0\n                       && 0 < VV\n                       && 2 <= VV}, {VV : GHC.Types.Int | VV /= 0\n                                                          && VV > 0\n                                                          && VV >= 0\n                                                          && 0 < VV\n                                                          && 2 <= VV})<\\x1 VV -> {VV : GHC.Types.Int | VV /= 0\n                                                                                                       && VV > 0\n                                                                                                       && VV >= 0\n                                                                                                       && VV >= x1\n                                                                                                       && 0 < VV\n                                                                                                       && 2 <= VV}> -> (GHC.Types.IO GHC.Types.Int)"
58:21-58:60::$dStatefulGen_a3yc :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a3yc}"
58:31-58:37::lq_anf$##7205759403792817741 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l\n                                      && snd v == u\n                                      && x_Tuple21 v == l\n                                      && x_Tuple22 v == u}"
58:32-58:33::l :: "{v : GHC.Types.Int | v == l\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
58:35-58:36::u :: "{v : GHC.Types.Int | v == u\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && v >= l\n                     && 0 < v\n                     && 2 <= v}"
58:38-58:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"