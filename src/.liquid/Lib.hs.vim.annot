1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
22:1-22:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
22:32-22:33::x :: "GHC.Types.Int"
22:36-22:37::x :: "{v : GHC.Types.Int | v == x}"
22:41-22:42::lq_anf$##7205759403792806078 :: "GHC.Types.Int"
22:46-22:50::_ :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
22:53-22:67::lq_anf$##7205759403792806112 :: "{v : (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
22:58-22:67::lq_anf$##7205759403792806111 :: "[GHC.Types.Char]"
23:46-23:50::_ :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
23:53-23:67::lq_anf$##7205759403792806109 :: "{v : (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
23:59-23:67::lq_anf$##7205759403792806108 :: "(GHC.Types.Int, [GHC.Types.Int])"
23:60-23:61::lq_anf$##7205759403792806103 :: "GHC.Types.Int"
23:63-23:66::lq_anf$##7205759403792806107 :: "[GHC.Types.Int]"
23:64-23:65::lq_anf$##7205759403792806105 :: "GHC.Types.Int"
24:36-24:37::x :: "{v : GHC.Types.Int | v == x}"
24:41-24:42::lq_anf$##7205759403792806084 :: "GHC.Types.Int"
25:5-25:9::rndN :: "GHC.Types.Int"
25:13-25:52::_ :: "(GHC.Types.IO GHC.Types.Int)"
25:23-25:29::lq_anf$##7205759403792806092 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x\n                                      && x_Tuple22 v == x}"
25:24-25:25::lq_anf$##7205759403792806091 :: "GHC.Types.Int"
25:27-25:28::x :: "{v : GHC.Types.Int | v == x}"
25:30-25:42::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"
26:10-26:28::lq_anf$##7205759403792806093 :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
26:24-26:28::rndN :: "{v : GHC.Types.Int | v == rndN}"
27:25-27:29::_ :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
27:32-27:46::lq_anf$##7205759403792806097 :: "{v : (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
27:37-27:46::lq_anf$##7205759403792806096 :: "[GHC.Types.Char]"
29:17-29:19::sq :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
29:22-29:37::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
29:32-29:37::upper :: "{v : GHC.Types.Int | v == upper\n                     && 2 <= v}"
30:17-30:19::ps :: "GHC.Types.Int"
30:22-30:32::_ :: "GHC.Types.Int"
30:30-30:32::sq :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | v == sq\n                                        && len v >= 0\n                                        && 1 <= len v}"
31:19-31:21::ps :: "{v : GHC.Types.Int | v == ps}"
31:25-31:26::x :: "{v : GHC.Types.Int | v == x}"
32:22-32:26::_ :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
32:29-32:43::lq_anf$##7205759403792806101 :: "{v : (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
32:35-32:43::lq_anf$##7205759403792806100 :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | fst v == ps\n                                        && snd v == sq\n                                        && x_Tuple21 v == ps\n                                        && x_Tuple22 v == sq}"
32:36-32:38::ps :: "{v : GHC.Types.Int | v == ps}"
32:40-32:42::sq :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | v == sq\n                                        && len v >= 0\n                                        && 1 <= len v}"
33:22-33:54::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
33:53-33:54::x :: "{v : GHC.Types.Int | v == x}"
34:46-34:50::_ :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])))"
34:53-34:67::lq_anf$##7205759403792806089 :: "{v : (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
34:58-34:67::lq_anf$##7205759403792806088 :: "[GHC.Types.Char]"
40:1-40:10::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
40:32-40:35::lq_anf$##7205759403792806076 :: "{v : [GHC.Types.Int] | len v == 0}"
40:33-40:34::lq_anf$##7205759403792806075 :: "GHC.Types.Int"
41:15-41:16::ds_d33M :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
41:20-41:21::lq_anf$##7205759403792806057 :: "GHC.Types.Int"
41:37-41:58::lq_anf$##7205759403792806062 :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                          && 0 < v})"
41:57-41:58::ds_d33M :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
42:49-42:60::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
42:59-42:60::lq_anf$##7205759403792806065 :: "GHC.Types.Int"
44:58-44:84::lq_anf$##7205759403792806069 :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                          && 0 < v})"
44:78-44:84::lq_anf$##7205759403792806068 :: "GHC.Types.Int"
44:79-44:81::si :: "{v : GHC.Types.Int | v == si\n                     && v >= 0\n                     && 0 < v}"
44:82-44:83::lq_anf$##7205759403792806067 :: "GHC.Types.Int"
45:73-45:84::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
45:83-45:84::lq_anf$##7205759403792806072 :: "GHC.Types.Int"
46:74-46:76::si :: "{v : GHC.Types.Int | v == si\n                     && v >= 0\n                     && 0 < v}"
46:79-46:92::lq_anf$##7205759403792806073 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
46:89-46:92::okN :: "{v : GHC.Types.Int | v == okN\n                     && v >= 0\n                     && 0 < v}"
47:55-47:57::si :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:60-47:78::_ :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:73-47:78::nGte1 :: "{v : GHC.Types.Int | v == nGte1\n                     && v >= 0\n                     && 0 < v}"
48:32-48:48::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
48:36-48:48::lq_anf$##7205759403792806061 :: "[GHC.Types.Char]"
53:1-53:13::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
53:30-53:31::lq_anf$##7205759403792806053 :: "{v : GHC.Prim.Int# | v == 1}"
54:18-54:27::lq_anf$##7205759403792806042 :: "GHC.Types.Bool"
54:26-54:27::ds_d32T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
54:30-54:31::ds_d32T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:18-55:19::ds_d32T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:22-55:23::lq_anf$##7205759403792806045 :: "GHC.Types.Int"
55:30-55:48::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
55:43-55:48::lq_anf$##7205759403792806052 :: "GHC.Types.Int"
55:44-55:45::ds_d32T :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:46-55:47::lq_anf$##7205759403792806051 :: "GHC.Types.Int"
56:30-56:46::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
56:34-56:46::lq_anf$##7205759403792806049 :: "[GHC.Types.Char]"