1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
27:1-27:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:32-27:33::x :: "GHC.Types.Int"
27:36-27:37::x :: "{v : GHC.Types.Int | v == x##a7dR}"
27:41-27:42::lq_anf$##7205759403792821778 :: "GHC.Types.Int"
27:45-27:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:52-27:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
27:59-27:73::lq_anf$##7205759403792821818 :: "Data.Text.Internal.Text"
27:64-27:73::lq_anf$##7205759403792821817 :: "[GHC.Types.Char]"
28:36-28:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:43-28:57::lq_anf$##7205759403792821815 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
28:49-28:57::lq_anf$##7205759403792821814 :: "(GHC.Types.Int, [GHC.Types.Int])"
28:50-28:51::lq_anf$##7205759403792821809 :: "GHC.Types.Int"
28:53-28:56::lq_anf$##7205759403792821813 :: "[GHC.Types.Int]"
28:54-28:55::lq_anf$##7205759403792821811 :: "GHC.Types.Int"
29:36-29:37::x :: "{v : GHC.Types.Int | v == x##a7dR}"
29:41-29:42::lq_anf$##7205759403792821784 :: "GHC.Types.Int"
30:3-30:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ > 0\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ >= 0\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                          && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                          && 0 < $VV##1825##k_\n                                                          && 2 <= $VV##1825##k_})"
30:11-30:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ > 0\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ >= 0\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                                        && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                                        && 0 < $VV##1825##k_\n                                                                        && 2 <= $VV##1825##k_}))"
30:16-30:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
30:30-30:49::lq_anf$##7205759403792821794 :: "(GHC.Types.IO GHC.Types.Int)"
30:42-30:48::lq_anf$##7205759403792821793 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x##a7dR\n                                      && x_Tuple22 v == x##a7dR}"
30:43-30:44::lq_anf$##7205759403792821792 :: "GHC.Types.Int"
30:46-30:47::x :: "{v : GHC.Types.Int | v == x##a7dR}"
31:8-31:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | $VV##1825##k_ /= 0\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ > 0\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ >= 0\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                                                               && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                                                               && 0 < $VV##1825##k_\n                                                               && 2 <= $VV##1825##k_}) | v == rndM##a7dT}"
32:15-32:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
32:22-32:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
32:29-32:43::lq_anf$##7205759403792821798 :: "Data.Text.Internal.Text"
32:34-32:43::lq_anf$##7205759403792821797 :: "[GHC.Types.Char]"
33:20-33:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
33:24-33:33::lq_anf$##7205759403792821804 :: "{v : GHC.Types.Bool | v <=> ps##a7h7 <= x##a7dR}"
33:25-33:27::ps :: "{v : GHC.Types.Int | v == ps##a7h7}"
33:31-33:32::x :: "{v : GHC.Types.Int | v == x##a7dR}"
33:34-33:52::lq_anf$##7205759403792821806 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
33:35-33:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
33:42-33:51::lq_anf$##7205759403792821805 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
33:48-33:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp##a7h4}"
33:53-33:87::lq_anf$##7205759403792821807 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
33:85-33:86::x :: "{v : GHC.Types.Int | v == x##a7dR}"
35:9-35:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
35:14-35:16::ps :: "GHC.Types.Int"
35:18-35:20::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
35:24-35:53::lq_anf$##7205759403792821802 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
35:25-35:35::lq_anf$##7205759403792821800 :: "GHC.Types.Int"
35:33-35:35::sq :: "{VV##2064 : [GHC.Types.Int] | false}"
35:37-35:52::lq_anf$##7205759403792821801 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
35:47-35:52::upper :: "{v : GHC.Types.Int | v == upper##a7dU\n                     && $VV##1825##k_ /= 0\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ /= $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ > 0\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ > $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ >= 0\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821777##d7kt##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821778##d7ku##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821783##d7kz##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821784##d7kA##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821791##d7kH##k_\n                     && $VV##1825##k_ >= $lq_anf$##7205759403792821792##d7kI##k_\n                     && 0 < $VV##1825##k_\n                     && 2 <= $VV##1825##k_}"
36:36-36:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
36:43-36:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
36:50-36:64::lq_anf$##7205759403792821789 :: "Data.Text.Internal.Text"
36:55-36:64::lq_anf$##7205759403792821788 :: "[GHC.Types.Char]"
46:1-46:10::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
46:15-46:18::lq_anf$##7205759403792821774 :: "{v : [GHC.Types.Int] | len v == 0}"
46:16-46:17::lq_anf$##7205759403792821773 :: "GHC.Types.Int"
47:15-47:16::ds_d7ix :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:20-47:21::lq_anf$##7205759403792821762 :: "GHC.Types.Int"
47:29-47:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
47:51-47:65::lq_anf$##7205759403792821767 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
47:64-47:65::ds_d7ix :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
48:13-48:24::Lib.createSeq :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
48:23-48:24::lq_anf$##7205759403792821771 :: "GHC.Types.Int"
49:16-49:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
49:28-49:31::okN :: "{v : GHC.Types.Int | v == okN##a7dZ\n                     && v >= 0\n                     && 0 < v}"
50:15-50:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
50:19-50:31::lq_anf$##7205759403792821766 :: "[GHC.Types.Char]"
59:1-59:12::Lib.lstPrimesLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : [{VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                             && 0 < VV##0}] | 1 <= len VV##0}"
59:17-59:20::lq_anf$##7205759403792821744 :: "{v : [GHC.Types.Int] | len v == 0}"
59:18-59:19::lq_anf$##7205759403792821743 :: "GHC.Types.Int"
60:17-60:18::ds_d7ih :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
60:22-60:23::lq_anf$##7205759403792821723 :: "GHC.Types.Int"
60:26-60:27::lq_anf$##7205759403792821729 :: "GHC.Types.Int"
60:30-60:67::lq_anf$##7205759403792821741 :: "{v : [{v : GHC.Types.Int | $VV##621##k_ /= 0\n                           && $VV##621##k_ > 0\n                           && $VV##621##k_ >= 0\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821728##d7jG##k_\n                           && $VV##621##k_ >= $lq_anf$##7205759403792821729##d7jH##k_\n                           && 0 < $VV##621##k_}] | len $VV##626##k_ >= 0\n                                                   && len $VV##626##k_ <= len $ds_d7in##k_}"
60:31-60:32::ds_d7io :: "GHC.Types.Int"
60:40-60:48::lq_anf$##7205759403792821740 :: "[GHC.Types.Int]"
60:41-60:42::lq_anf$##7205759403792821739 :: "GHC.Types.Int"
60:46-60:47::ds_d7ih :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
60:50-60:51::ds_d7io :: "GHC.Types.Int"
60:54-60:55::lq_anf$##7205759403792821732 :: "GHC.Types.Int"
60:57-60:66::lq_anf$##7205759403792821735 :: "GHC.Types.Bool"
60:65-60:66::ds_d7io :: "GHC.Types.Int"
61:17-61:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
61:21-61:33::lq_anf$##7205759403792821727 :: "[GHC.Types.Char]"
73:1-73:13::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
73:18-73:19::lq_anf$##7205759403792821758 :: "{v : GHC.Prim.Int# | v == 1}"
74:18-74:27::lq_anf$##7205759403792821747 :: "GHC.Types.Bool"
74:26-74:27::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
74:30-74:31::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
75:18-75:19::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
75:22-75:23::lq_anf$##7205759403792821750 :: "GHC.Types.Int"
75:26-75:46::Lib.firstPrimeLE :: "{VV##0 : GHC.Types.Int | VV##0 >= 0\n                         && 0 < VV##0} -> {VV##0 : GHC.Types.Int | VV##0 >= 0\n                                                                   && 0 < VV##0}"
75:39-75:46::lq_anf$##7205759403792821757 :: "GHC.Types.Int"
75:40-75:41::ds_d7i3 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
75:44-75:45::lq_anf$##7205759403792821756 :: "GHC.Types.Int"
76:18-76:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
76:22-76:34::lq_anf$##7205759403792821754 :: "[GHC.Types.Char]"
83:1-83:11::Lib.getRndMInt :: "({VV##1398 : GHC.Types.Int | $VV##1398##k_ /= 0\n                             && $VV##1398##k_ > 0\n                             && $VV##1398##k_ >= 0\n                             && 0 < $VV##1398##k_\n                             && 2 <= $VV##1398##k_}, {VV##1400 : GHC.Types.Int | $VV##1400##k_ /= 0\n                                                                                 && $VV##1400##k_ > 0\n                                                                                 && $VV##1400##k_ >= 0\n                                                                                 && 0 < $VV##1400##k_\n                                                                                 && 2 <= $VV##1400##k_})<\\_ VV -> {VV##1403 : GHC.Types.Int | $VV##1403##k_ /= 0\n                                                                                                                                              && $VV##1403##k_ > 0\n                                                                                                                                              && $VV##1403##k_ >= 0\n                                                                                                                                              && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                                                                                                                                              && 0 < $VV##1403##k_\n                                                                                                                                              && 2 <= $VV##1403##k_}> -> (GHC.Types.IO GHC.Types.Int)"
83:21-83:60::$dStatefulGen_a7f3 :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a7f3}"
83:31-83:37::lq_anf$##7205759403792821776 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l##a7e4\n                                      && snd v == u##a7e5\n                                      && x_Tuple21 v == l##a7e4\n                                      && x_Tuple22 v == u##a7e5}"
83:32-83:33::l :: "{v : GHC.Types.Int | v == l##a7e4\n                     && $VV##1398##k_ /= 0\n                     && $VV##1398##k_ > 0\n                     && $VV##1398##k_ >= 0\n                     && 0 < $VV##1398##k_\n                     && 2 <= $VV##1398##k_}"
83:35-83:36::u :: "{v : GHC.Types.Int | v == u##a7e5\n                     && $VV##1400##k_ /= 0\n                     && $VV##1403##k_ /= 0\n                     && $VV##1400##k_ > 0\n                     && $VV##1403##k_ > 0\n                     && $VV##1400##k_ >= 0\n                     && $VV##1403##k_ >= 0\n                     && $VV##1403##k_ >= $lq_tmp$x##1402##k_\n                     && 0 < $VV##1400##k_\n                     && 0 < $VV##1403##k_\n                     && 2 <= $VV##1400##k_\n                     && 2 <= $VV##1403##k_}"
83:38-83:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"