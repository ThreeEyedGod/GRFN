1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
22:1-22:31::Lib.genARandomPreFactoredNumberLEn :: "GHC.Types.Int -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
22:32-22:33::x :: "GHC.Types.Int"
22:36-22:37::x :: "{v : GHC.Types.Int | v == x}"
22:41-22:42::lq_anf$##7205759403792817820 :: "GHC.Types.Int"
22:45-22:49::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
22:52-22:56::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
22:59-22:73::lq_anf$##7205759403792817860 :: "Data.Text.Internal.Text"
22:64-22:73::lq_anf$##7205759403792817859 :: "[GHC.Types.Char]"
23:36-23:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
23:43-23:57::lq_anf$##7205759403792817857 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
23:49-23:57::lq_anf$##7205759403792817856 :: "(GHC.Types.Int, [GHC.Types.Int])"
23:50-23:51::lq_anf$##7205759403792817851 :: "GHC.Types.Int"
23:53-23:56::lq_anf$##7205759403792817855 :: "[GHC.Types.Int]"
23:54-23:55::lq_anf$##7205759403792817853 :: "GHC.Types.Int"
24:36-24:37::x :: "{v : GHC.Types.Int | v == x}"
24:41-24:42::lq_anf$##7205759403792817826 :: "GHC.Types.Int"
25:3-25:7::rndM :: "(Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                          && v > 0\n                                                          && v >= 0\n                                                          && 0 < v\n                                                          && 2 <= v})"
25:11-25:49::_ :: "(GHC.Types.IO (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                                        && v > 0\n                                                                        && v >= 0\n                                                                        && 0 < v\n                                                                        && 2 <= v}))"
25:16-25:29::RefinementHelper.filterInvalid :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | 2 <= v})"
25:30-25:49::lq_anf$##7205759403792817836 :: "(GHC.Types.IO GHC.Types.Int)"
25:42-25:48::lq_anf$##7205759403792817835 :: "{v : (GHC.Types.Int, GHC.Types.Int) | snd v == x\n                                      && x_Tuple22 v == x}"
25:43-25:44::lq_anf$##7205759403792817834 :: "GHC.Types.Int"
25:46-25:47::x :: "{v : GHC.Types.Int | v == x}"
26:8-26:12::_ :: "{v : (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v /= 0\n                                                               && v > 0\n                                                               && v >= 0\n                                                               && 0 < v\n                                                               && 2 <= v}) | v == rndM}"
27:15-27:19::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
27:22-27:26::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
27:29-27:43::lq_anf$##7205759403792817840 :: "Data.Text.Internal.Text"
27:34-27:43::lq_anf$##7205759403792817839 :: "[GHC.Types.Char]"
28:20-28:87::Data.Bool.HT.Private.if' :: "{VV : forall a . GHC.Types.Bool -> a -> a -> a | VV == if'}"
28:24-28:33::lq_anf$##7205759403792817846 :: "{v : GHC.Types.Bool | v <=> ps <= x}"
28:25-28:27::ps :: "{v : GHC.Types.Int | v == ps}"
28:31-28:32::x :: "{v : GHC.Types.Int | v == x}"
28:34-28:52::lq_anf$##7205759403792817848 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:35-28:39::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:42-28:51::lq_anf$##7205759403792817847 :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | not (isLeft v)}"
28:48-28:51::rsp :: "{v : (GHC.Types.Int, [GHC.Types.Int]) | v == rsp}"
28:53-28:87::lq_anf$##7205759403792817849 :: "(GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
28:85-28:86::x :: "{v : GHC.Types.Int | v == x}"
30:9-30:12::rsp :: "(GHC.Types.Int, [GHC.Types.Int])"
30:14-30:16::ps :: "GHC.Types.Int"
30:18-30:20::sq :: "{VV : [GHC.Types.Int] | false}"
30:24-30:53::lq_anf$##7205759403792817844 :: "({v : GHC.Types.Int | false}, {v : [GHC.Types.Int] | false})<\\_ VV -> {v : [GHC.Types.Int] | false}>"
30:25-30:35::lq_anf$##7205759403792817842 :: "GHC.Types.Int"
30:33-30:35::sq :: "{VV : [GHC.Types.Int] | false}"
30:37-30:52::lq_anf$##7205759403792817843 :: "{v : [{v : GHC.Types.Int | v >= 0\n                           && 0 < v}] | 1 <= len v}"
30:47-30:52::upper :: "{v : GHC.Types.Int | v == upper\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
31:36-31:40::_ :: "(Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) -> (GHC.Types.IO (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])))"
31:43-31:47::_ :: "{v : (Data.Either.Either Data.Text.Internal.Text (GHC.Types.Int, [GHC.Types.Int])) | isLeft v}"
31:50-31:64::lq_anf$##7205759403792817831 :: "Data.Text.Internal.Text"
31:55-31:64::lq_anf$##7205759403792817830 :: "[GHC.Types.Char]"
37:1-37:10::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
37:15-37:18::lq_anf$##7205759403792817816 :: "{v : [GHC.Types.Int] | len v == 0}"
37:16-37:17::lq_anf$##7205759403792817815 :: "GHC.Types.Int"
38:15-38:16::ds_d655 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
38:20-38:21::lq_anf$##7205759403792817804 :: "GHC.Types.Int"
38:29-38:48::_ :: "GHC.Types.Int -> (Data.Either.Either [GHC.Types.Char] {v : GHC.Types.Int | v >= 0\n                                                                           && 0 < v})"
38:51-38:65::lq_anf$##7205759403792817809 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
38:64-38:65::ds_d655 :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
39:13-39:24::Lib.createSeq :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
39:23-39:24::lq_anf$##7205759403792817813 :: "GHC.Types.Int"
40:16-40:31::Lib.lstPrimesLE :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v} -> {v : [{v : GHC.Types.Int | v >= 0\n                                                             && 0 < v}] | 1 <= len v}"
40:28-40:31::okN :: "{v : GHC.Types.Int | v == okN\n                     && v >= 0\n                     && 0 < v}"
41:15-41:31::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
41:19-41:31::lq_anf$##7205759403792817808 :: "[GHC.Types.Char]"
45:1-45:12::Lib.lstPrimesLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : [{VV : GHC.Types.Int | VV >= 0\n                                                                 && 0 < VV}] | 1 <= len VV}"
45:17-45:20::lq_anf$##7205759403792817786 :: "{v : [GHC.Types.Int] | len v == 0}"
45:18-45:19::lq_anf$##7205759403792817785 :: "GHC.Types.Int"
46:17-46:18::ds_d64P :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
46:22-46:23::lq_anf$##7205759403792817765 :: "GHC.Types.Int"
46:26-46:27::lq_anf$##7205759403792817771 :: "GHC.Types.Int"
46:30-46:67::lq_anf$##7205759403792817783 :: "{v : [{v : GHC.Types.Int | v /= 0\n                           && v > 0\n                           && v >= 0\n                           && 0 < v}] | len v >= 0}"
46:31-46:32::ds_d64W :: "GHC.Types.Int"
46:40-46:48::lq_anf$##7205759403792817782 :: "[GHC.Types.Int]"
46:41-46:42::lq_anf$##7205759403792817781 :: "GHC.Types.Int"
46:46-46:47::ds_d64P :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
46:50-46:51::ds_d64W :: "GHC.Types.Int"
46:54-46:55::lq_anf$##7205759403792817774 :: "GHC.Types.Int"
46:57-46:66::lq_anf$##7205759403792817777 :: "GHC.Types.Bool"
46:65-46:66::ds_d64W :: "GHC.Types.Int"
47:17-47:33::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
47:21-47:33::lq_anf$##7205759403792817769 :: "[GHC.Types.Char]"
54:1-54:13::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
54:18-54:19::lq_anf$##7205759403792817800 :: "{v : GHC.Prim.Int# | v == 1}"
55:18-55:27::lq_anf$##7205759403792817789 :: "GHC.Types.Bool"
55:26-55:27::ds_d63a :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
55:30-55:31::ds_d63a :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
56:18-56:19::ds_d63a :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
56:22-56:23::lq_anf$##7205759403792817792 :: "GHC.Types.Int"
56:26-56:46::Lib.firstPrimeLE :: "{VV : GHC.Types.Int | VV >= 0\n                      && 0 < VV} -> {VV : GHC.Types.Int | VV >= 0\n                                                          && 0 < VV}"
56:39-56:46::lq_anf$##7205759403792817799 :: "GHC.Types.Int"
56:40-56:41::ds_d63a :: "{v : GHC.Types.Int | v >= 0\n                     && 0 < v}"
56:44-56:45::lq_anf$##7205759403792817798 :: "GHC.Types.Int"
57:18-57:34::RefinementHelper.die :: "{VV : forall a . {v : [GHC.Types.Char] | false} -> a | VV == die}"
57:22-57:34::lq_anf$##7205759403792817796 :: "[GHC.Types.Char]"
62:1-62:11::Lib.getRndMInt :: "({VV : GHC.Types.Int | VV /= 0\n                       && VV > 0\n                       && VV >= 0\n                       && 0 < VV\n                       && 2 <= VV}, {VV : GHC.Types.Int | VV /= 0\n                                                          && VV > 0\n                                                          && VV >= 0\n                                                          && 0 < VV\n                                                          && 2 <= VV})<\\x1 VV -> {VV : GHC.Types.Int | VV /= 0\n                                                                                                       && VV > 0\n                                                                                                       && VV >= 0\n                                                                                                       && VV >= x1\n                                                                                                       && 0 < VV\n                                                                                                       && 2 <= VV}> -> (GHC.Types.IO GHC.Types.Int)"
62:21-62:60::$dStatefulGen_a3yY :: "{v : (System.Random.Internal.StatefulGen (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) GHC.Types.IO) | v == $dStatefulGen_a3yY}"
62:31-62:37::lq_anf$##7205759403792817818 :: "{v : (GHC.Types.Int, GHC.Types.Int) | fst v == l\n                                      && snd v == u\n                                      && x_Tuple21 v == l\n                                      && x_Tuple22 v == u}"
62:32-62:33::l :: "{v : GHC.Types.Int | v == l\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && 0 < v\n                     && 2 <= v}"
62:35-62:36::u :: "{v : GHC.Types.Int | v == u\n                     && v /= 0\n                     && v > 0\n                     && v >= 0\n                     && v >= l\n                     && 0 < v\n                     && 2 <= v}"
62:38-62:50::System.Random.Stateful.globalStdGen :: "{v : (System.Random.Stateful.AtomicGenM System.Random.Internal.StdGen) | v == globalStdGen}"